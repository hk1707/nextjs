{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/src/components/cart/AddToCartButton.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query GET_CART {\\n    cart {\\n      contents {\\n        nodes {\\n          key\\n          product {\\n            id\\n            productId\\n            name\\n            description\\n            type\\n            onSale\\n            slug\\n            averageRating\\n            reviewCount\\n            image {\\n              id\\n                sourceUrl\\n                srcSet\\n                altText\\n                title       \\n            }\\n            galleryImages {\\n              nodes {\\n                id\\n                sourceUrl\\n                srcSet\\n                altText\\n                title   \\n              }\\n            }\\n\\n          }\\n          variation {\\n            id\\n            variationId\\n            name\\n            description\\n            type\\n            onSale\\n            price\\n            regularPrice\\n            salePrice\\n            image {\\n              id\\n              sourceUrl\\n              srcSet\\n              altText\\n              title      \\n            }\\n            attributes {\\n              nodes {\\n                id\\n                name\\n                value\\n              }\\n            }\\n          }\\n          quantity\\n          total\\n          subtotal\\n          subtotalTax\\n        }\\n      }\\n      appliedCoupons {\\n        nodes {\\n          id\\n          couponId\\n          discountType\\n          amount\\n          dateExpiry\\n          products {\\n            nodes {\\n              id\\n            }\\n          }\\n          productCategories {\\n            nodes {\\n              id\\n            }\\n          }\\n        }\\n      }\\n      subtotal\\n      subtotalTax\\n      shippingTax\\n      shippingTotal\\n      total\\n      totalTax\\n      feeTax\\n      feeTotal\\n      discountTax\\n      discountTotal\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation ($input: AddToCartInput!) {\\n    __typename\\n  addToCart(input: $input) {\\n    clientMutationId\\n    cartItem {\\n      key\\n      product {\\n        id\\n        productId\\n        name\\n        description\\n        type\\n        onSale\\n        slug\\n        averageRating\\n        reviewCount\\n        image {\\n          id\\n          sourceUrl\\n          altText\\n        }\\n        galleryImages {\\n          nodes {\\n            id\\n            sourceUrl\\n            altText\\n          }\\n        }\\n      }\\n      quantity\\n      subtotal\\n      subtotalTax\\n      tax\\n      total\\n      variation{\\n        id\\n        variationId\\n        name\\n        description\\n        type\\n        onSale\\n        price\\n        regularPrice\\n        salePrice\\n        image{\\n          id\\n          sourceUrl\\n          altText\\n        }\\n        attributes{\\n          nodes{\\n            id\\n            attributeId\\n            name\\n            value\\n          }\\n        }\\n      }\\n    }\\n  }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState, useContext } from \"react\";\nimport { ApolloProvider, gql, useQuery, useMutation } from '@apollo/client';\nimport { AppContext } from \"../context/AppContext\";\nimport { getFormattedCart, updateCart, addFirstProduct } from \"../../functions\";\nimport Link from \"next/link\"; //import gql from \"graphql-tag\";\n\nimport { v4 } from 'uuid'; //import GET_CART from \"../../queries/get-cart\";\n//import ADD_TO_CART from \"../../mutations/add-to-cart\";\n\nvar ADD_TO_CART = gql(_templateObject());\nvar GET_CART = gql(_templateObject2());\n\nvar AddToCart = function AddToCart(props) {\n  _s();\n\n  var product = props.product;\n  var productQryInput = {\n    clientMutationId: v4(),\n    // Generate a unique id.\n    productId: product.productId\n  };\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext[0],\n      setCart = _useContext[1];\n\n  var _useState = useState(false),\n      showViewCart = _useState[0],\n      setShowViewCart = _useState[1];\n\n  var _useState2 = useState(null),\n      requestError = _useState2[0],\n      setRequestError = _useState2[1];\n  /**\n   * @TODO will update this in future, when required.\n   * Handles adding items to the cart.\n   *\n   * @return {void}\n   */\n\n\n  var handleAddToCartLocalStorage = function handleAddToCartLocalStorage() {\n    // If component is rendered client side.\n    if (true) {\n      var existingCart = localStorage.getItem('woo-next-cart'); // If cart has item(s) already, update existing or add new item.\n\n      if (!existingCart) {\n        existingCart = JSON.parse(existingCart);\n        var qtyToBeAdded = 1;\n        var updatedCart = updateCart(existingCart, product, qtyToBeAdded);\n        setCart(updatedCart);\n      } else {\n        /**\n         * If No Items in the cart, create an empty array and add one.\n         * @type {Array}\n         */\n        var newCart = addFirstProduct(product);\n        setCart(newCart);\n      } // Show View Cart Button\n\n\n      setShowViewCart(true);\n    }\n  }; // Get Cart Data.\n\n\n  var _useQuery = useQuery(GET_CART, {\n    notifyOnNetworkStatusChange: true,\n    onCompleted: function onCompleted() {\n      //console.warn( 'completed GET_CART' );\n      console.log(loading); // Update cart in the localStorage.\n\n      var updatedCart = getFormattedCart(data);\n      localStorage.setItem('woo-next-cart', JSON.stringify(updatedCart)); // Update cart data in React Context.\n\n      setCart(updatedCart);\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      refetch = _useQuery.refetch; // Add to Cart Mutation.\n\n\n  var _useMutation = useMutation(ADD_TO_CART, {\n    variables: {\n      input: productQryInput\n    },\n    onCompleted: function onCompleted() {\n      // console.warn( 'completed ADD_TO_CART' );\n      // If error.\n      if (addToCartError) {\n        setRequestError(addToCartError.graphQLErrors[0].message);\n      } // On Success:\n      // 1. Make the GET_CART query to update the cart with new values in React context.\n\n\n      refetch(); // 2. Show View Cart Button\n\n      setShowViewCart(true);\n    },\n    onError: function onError(error) {\n      if (error) {\n        setRequestError(error.graphQLErrors[0].message);\n      }\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addToCart = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      addToCartRes = _useMutation2$.data,\n      addToCartLoading = _useMutation2$.loading,\n      addToCartError = _useMutation2$.error;\n\n  var handleAddToCartClick = function handleAddToCartClick() {\n    //handleAddToCartLocalStorage();\n    setRequestError(null);\n    addToCart();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [addToCartLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Adding to Cart...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 25\n    }, _this), \"ExternalProduct\" === product.__typename ? /*#__PURE__*/_jsxDEV(\"a\", {\n      href: product.externalUrl,\n      target: \"_blank\",\n      className: \"px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\",\n      children: \"Buy now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 6\n    }, _this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddToCartClick,\n      className: \"px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current hover:bg-purple-600 hover:text-white hover:border-purple-600\",\n      children: \"Add to cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 5\n    }, _this), showViewCart ? /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/cart\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-3 py-1 rounded-sm text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\",\n        children: \"View Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 24\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 5\n    }, _this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(AddToCart, \"6Jq9jqPNdbpW85xpPCQnMgY7+ng=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = AddToCart;\nexport default AddToCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddToCart\");","map":{"version":3,"sources":["/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/src/components/cart/AddToCartButton.js"],"names":["useState","useContext","ApolloProvider","gql","useQuery","useMutation","AppContext","getFormattedCart","updateCart","addFirstProduct","Link","v4","ADD_TO_CART","GET_CART","AddToCart","props","product","productQryInput","clientMutationId","productId","cart","setCart","showViewCart","setShowViewCart","requestError","setRequestError","handleAddToCartLocalStorage","existingCart","localStorage","getItem","JSON","parse","qtyToBeAdded","updatedCart","newCart","notifyOnNetworkStatusChange","onCompleted","console","log","loading","data","setItem","stringify","error","refetch","variables","input","addToCartError","graphQLErrors","message","onError","addToCart","addToCartRes","addToCartLoading","handleAddToCartClick","__typename","externalUrl"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport {ApolloProvider, gql , useQuery, useMutation } from '@apollo/client';\nimport { AppContext } from \"../context/AppContext\";\nimport { getFormattedCart , updateCart , addFirstProduct  } from \"../../functions\";\nimport Link from \"next/link\";\n//import gql from \"graphql-tag\";\nimport { v4 } from 'uuid';\n//import GET_CART from \"../../queries/get-cart\";\n//import ADD_TO_CART from \"../../mutations/add-to-cart\";\n\n\nconst ADD_TO_CART = gql`\n  mutation ($input: AddToCartInput!) {\n    __typename\n  addToCart(input: $input) {\n    clientMutationId\n    cartItem {\n      key\n      product {\n        id\n        productId\n        name\n        description\n        type\n        onSale\n        slug\n        averageRating\n        reviewCount\n        image {\n          id\n          sourceUrl\n          altText\n        }\n        galleryImages {\n          nodes {\n            id\n            sourceUrl\n            altText\n          }\n        }\n      }\n      quantity\n      subtotal\n      subtotalTax\n      tax\n      total\n      variation{\n        id\n        variationId\n        name\n        description\n        type\n        onSale\n        price\n        regularPrice\n        salePrice\n        image{\n          id\n          sourceUrl\n          altText\n        }\n        attributes{\n          nodes{\n            id\n            attributeId\n            name\n            value\n          }\n        }\n      }\n    }\n  }\n  }\n`;\n\nconst GET_CART = gql`\n  query GET_CART {\n    cart {\n      contents {\n        nodes {\n          key\n          product {\n            id\n            productId\n            name\n            description\n            type\n            onSale\n            slug\n            averageRating\n            reviewCount\n            image {\n              id\n                sourceUrl\n                srcSet\n                altText\n                title       \n            }\n            galleryImages {\n              nodes {\n                id\n                sourceUrl\n                srcSet\n                altText\n                title   \n              }\n            }\n\n          }\n          variation {\n            id\n            variationId\n            name\n            description\n            type\n            onSale\n            price\n            regularPrice\n            salePrice\n            image {\n              id\n              sourceUrl\n              srcSet\n              altText\n              title      \n            }\n            attributes {\n              nodes {\n                id\n                name\n                value\n              }\n            }\n          }\n          quantity\n          total\n          subtotal\n          subtotalTax\n        }\n      }\n      appliedCoupons {\n        nodes {\n          id\n          couponId\n          discountType\n          amount\n          dateExpiry\n          products {\n            nodes {\n              id\n            }\n          }\n          productCategories {\n            nodes {\n              id\n            }\n          }\n        }\n      }\n      subtotal\n      subtotalTax\n      shippingTax\n      shippingTotal\n      total\n      totalTax\n      feeTax\n      feeTotal\n      discountTax\n      discountTotal\n    }\n  }\n`;\n\n\nconst AddToCart = ( props ) => {\n\n\tconst { product } = props;\n\n\tconst productQryInput = {\n\t\tclientMutationId: v4(), // Generate a unique id.\n\t\tproductId: product.productId,\n\t};\n\n\tconst [ cart, setCart ] = useContext( AppContext );\n\tconst [ showViewCart, setShowViewCart ] = useState( false );\n\tconst [ requestError, setRequestError ] = useState( null );\n\n\t/**\n\t * @TODO will update this in future, when required.\n\t * Handles adding items to the cart.\n\t *\n\t * @return {void}\n\t */\n\tconst handleAddToCartLocalStorage = () => {\n\t\n\t\t// If component is rendered client side.\n\t\tif ( process.browser ) {\n\t\n\t\t\tlet existingCart = localStorage.getItem( 'woo-next-cart' );\n\t\n\n\t\t\t// If cart has item(s) already, update existing or add new item.\n\t\t\tif ( ! existingCart ) {\n\t\n\t\t\t\texistingCart = JSON.parse( existingCart );\n\t\n\t\t\t\tconst qtyToBeAdded = 1;\n\t\n\t\t\t\tconst updatedCart = updateCart( existingCart, product, qtyToBeAdded );\n\t\n\t\t\t\tsetCart( updatedCart );\n\t\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * If No Items in the cart, create an empty array and add one.\n\t\t\t\t * @type {Array}\n\t\t\t\t */\n\t\t\t\tconst newCart = addFirstProduct( product );\n\t\t\t\tsetCart( newCart );\n\t\t\t}\n\t\n\t\t\t// Show View Cart Button\n\t\t\tsetShowViewCart( true )\n\t\t}\n\t};\n\n\t// Get Cart Data.\n\tconst { loading, error, data, refetch } = useQuery( GET_CART, {\n\t\tnotifyOnNetworkStatusChange: true,\n\t\tonCompleted: () => {\n\t\t\t //console.warn( 'completed GET_CART' );\n\t\t\tconsole.log(loading)\n\t\t\t// Update cart in the localStorage.\n\t\t\tconst updatedCart = getFormattedCart( data );\n\t\t\tlocalStorage.setItem( 'woo-next-cart', JSON.stringify( updatedCart ) );\n\t\t\t\n\t\t\t// Update cart data in React Context.\n\t\t\tsetCart( updatedCart );\n\t\t}\n\t} );\n\n\t// Add to Cart Mutation.\n\tconst [ addToCart, { data: addToCartRes, loading: addToCartLoading, error: addToCartError }] = useMutation( ADD_TO_CART, {\n\t\tvariables: {\n\t\t\tinput: productQryInput,\n\t\t},\n\t\n\t\tonCompleted: () => {\n\t\t\t// console.warn( 'completed ADD_TO_CART' );\n\n\t\t\t// If error.\n\t\t\tif ( addToCartError ) {\n\t\t\t\tsetRequestError( addToCartError.graphQLErrors[0].message );\n\t\t\t}\n\n\t\t\t// On Success:\n\t\t\t// 1. Make the GET_CART query to update the cart with new values in React context.\n\t\t\trefetch();\n\n\t\t\t// 2. Show View Cart Button\n\t\t\tsetShowViewCart( true )\n\t\t\t\n\t\t},\n\t\tonError: ( error ) => {\n\t\t\tif ( error ) {\n\t\t\t\tsetRequestError( error.graphQLErrors[ 0 ].message );\n\t\t\t}\n\t\t}\n\t} );\n\n\tconst handleAddToCartClick = () => {\n\t    //handleAddToCartLocalStorage();\n\t\tsetRequestError( null );\n\t\taddToCart();\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{/* Add To Cart Loading*/}\n\t\t\t{addToCartLoading && <p>Adding to Cart...</p>}\n\n\t\t\t{/*\tCheck if its an external product then put its external buy link */}\n\t\t\t{ \"ExternalProduct\" === product.__typename ? (\n\t\t\t\t\t<a href={ product.externalUrl } target=\"_blank\" className=\"px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\">Buy now</a>\n\t\t\t\t) :\n\t\t\t\t<button onClick={ handleAddToCartClick } className=\"px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current hover:bg-purple-600 hover:text-white hover:border-purple-600\">Add to cart</button>\n\t\t\t}\n\t\t\t{ showViewCart ? (\n\t\t\t\t<Link href=\"/cart\"><button className=\"px-3 py-1 rounded-sm text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\">View Cart</button></Link>\n\t\t\t) : '' }\n\t\t</div>\n\t);\n};\n\nexport default AddToCart;\n"]},"metadata":{},"sourceType":"module"}