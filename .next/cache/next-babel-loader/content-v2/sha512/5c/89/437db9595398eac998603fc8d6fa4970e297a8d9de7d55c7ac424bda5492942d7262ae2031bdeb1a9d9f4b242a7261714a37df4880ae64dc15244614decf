{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/components/Menu.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"query{\\n    menus {\\n        nodes {\\n        id\\n        locations\\n        name\\n        slug\\n        count\\n        menuItems {\\n            edges {\\n            node {\\n                id\\n                title\\n                label\\n                path\\n                parentId\\n                childItems {\\n                edges {\\n                    node {\\n                    id\\n                    label\\n                    title\\n                    path\\n                    }\\n                }\\n                }\\n            }\\n            }\\n        }\\n        }\\n    }\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Nav from './Nav'; //import client from \"./../components/Apolloclient\";\n\nimport { gql, useQuery, ApolloProvider } from '@apollo/client'; //import MENU_QUERY from \"../query/menuquery\";\n\nimport React, { useState } from \"react\";\nvar MENU_QUERY = gql(_templateObject());\n\nvar Menu = function Menu() {\n  _s();\n\n  var _useQuery = useQuery(MENU_QUERY),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return 'Loading...';\n  if (error) return \"Error! \".concat(error.message);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Menu, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/components/Menu.js"],"names":["Nav","gql","useQuery","ApolloProvider","React","useState","MENU_QUERY","Menu","loading","error","data","message","console","log","client"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,OAAhB,C,CACA;;AACA,SAASC,GAAT,EAAcC,QAAd,EAAyBC,cAAzB,QAA+C,gBAA/C,C,CACA;;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,IAAMC,UAAU,GAAEL,GAAF,mBAAhB;;AAiCA,IAAMM,IAAI,GAAG,SAAPA,IAAO,GAAO;AAAA;;AAAA,kBAEiBL,QAAQ,CAACI,UAAD,CAFzB;AAAA,MAERE,OAFQ,aAERA,OAFQ;AAAA,MAECC,KAFD,aAECA,KAFD;AAAA,MAEQC,IAFR,aAEQA,IAFR;;AAIhB,MAAIF,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,wBAAiBA,KAAK,CAACE,OAAvB;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,sBACI,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEI,MAAxB;AAAA,2BAEI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CAjBD;;GAAMP,I;UAE+BL,Q;;;KAF/BK,I;AAmBN,eAAeA,IAAf","sourcesContent":["import Nav from './Nav';\n//import client from \"./../components/Apolloclient\";\nimport { gql, useQuery , ApolloProvider } from '@apollo/client';\n//import MENU_QUERY from \"../query/menuquery\";\nimport React, { useState } from \"react\";\n\nconst MENU_QUERY =gql`query{\n    menus {\n        nodes {\n        id\n        locations\n        name\n        slug\n        count\n        menuItems {\n            edges {\n            node {\n                id\n                title\n                label\n                path\n                parentId\n                childItems {\n                edges {\n                    node {\n                    id\n                    label\n                    title\n                    path\n                    }\n                }\n                }\n            }\n            }\n        }\n        }\n    }\n}`;\n\nconst Menu = ( ) => {\n    \n    const { loading, error, data } = useQuery(MENU_QUERY);\n\n    if (loading) return 'Loading...';\n    if (error) return `Error! ${error.message}`;\n\n    console.log(data);\n \n    return(        \n        <ApolloProvider client={client}>\n            \n            <Nav />\n\n        </ApolloProvider>\n    )\n\n}\n\nexport default Menu;\n\n"]},"metadata":{},"sourceType":"module"}