{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/pages/product/index.js\";\nimport Layout from \"../../components/Layout\";\nimport PRODUCT_QUERY_NEW from \"../../query/productquery\";\nimport { ApolloProvider, useQuery } from '@apollo/client';\nimport client from \"../../components/Apolloclient\";\n\nconst ProductPage = () => {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n};\n\nIndex.getInitialProps = async () => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(PRODUCT_QUERY_NEW);\n  if (loading) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 23\n  }, this);\n  if (error) return true;\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 21\n  }, this);\n  return {\n    product: res.data.products.nodes,\n    post: allPosts,\n    test: cart\n  };\n};\n\nexport default ProductPage;","map":{"version":3,"sources":["/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/pages/product/index.js"],"names":["Layout","PRODUCT_QUERY_NEW","ApolloProvider","useQuery","client","ProductPage","Index","getInitialProps","data","loading","error","product","res","products","nodes","post","allPosts","test","cart"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,gBAAzC;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAGxB,sBACI,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAED,MAAxB;AAAA,2BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AASD,CAZD;;AAcAE,KAAK,CAACC,eAAN,GAAwB,YAAW;AAEjC,QAAM;AAAEC,IAAAA,IAAF;AAASC,IAAAA,OAAT;AAAmBC,IAAAA;AAAnB,MAA6BP,QAAQ,CAAEF,iBAAF,CAA3C;AAEA,MAAIQ,OAAJ,EAAa,oBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,IAAP;AACX,MAAI,CAACF,IAAL,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGV,SAAO;AACHG,IAAAA,OAAO,EAACC,GAAG,CAACJ,IAAJ,CAASK,QAAT,CAAkBC,KADvB;AAEHC,IAAAA,IAAI,EAACC,QAFF;AAGHC,IAAAA,IAAI,EAACC;AAHF,GAAP;AAMF,CAfD;;AAiBA,eAAeb,WAAf","sourcesContent":["import Layout from \"../../components/Layout\";\nimport PRODUCT_QUERY_NEW from \"../../query/productquery\";\nimport { ApolloProvider ,useQuery } from '@apollo/client';\nimport client from \"../../components/Apolloclient\";\n\nconst ProductPage = () => {\n\n  \n  return (\n      <ApolloProvider client={client} >\n      <Layout>\n          \n      </Layout>\n      </ApolloProvider>\n    \n  )\n\n}\n\nIndex.getInitialProps = async() => {\n\n  const { data , loading , error } = useQuery( PRODUCT_QUERY_NEW );\n\n  if (loading) return <Loader />;\n  if (error) return true;\n  if (!data) return <p>Not found</p>;\n\n\n   return {\n       product:res.data.products.nodes,\n       post:allPosts,\n       test:cart\n   }\n\n};\n\nexport default ProductPage;"]},"metadata":{},"sourceType":"module"}