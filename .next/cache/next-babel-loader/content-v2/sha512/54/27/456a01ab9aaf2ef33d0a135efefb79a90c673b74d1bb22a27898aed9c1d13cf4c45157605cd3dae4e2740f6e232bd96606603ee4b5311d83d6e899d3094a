{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/src/components/cart/AddToCartButton.js\";\nimport { useState, useContext } from \"react\";\nimport { useQuery, useMutation } from '@apollo/client';\nimport { AppContext } from \"../context/AppContext\";\nimport { getFormattedCart, updateCart, addFirstProduct } from \"../../functions\";\nimport Link from \"next/link\";\nimport { v4 } from 'uuid';\nimport GET_CART from \"../../queries/get-cart\";\nimport ADD_TO_CART from \"../../mutations/add-to-cart\";\n\nconst AddToCart = props => {\n  const {\n    product\n  } = props;\n  const productQryInput = {\n    clientMutationId: v4(),\n    // Generate a unique id.\n    productId: product.productId\n  };\n  const {\n    0: cart,\n    1: setCart\n  } = useContext(AppContext);\n  const {\n    0: showViewCart,\n    1: setShowViewCart\n  } = useState(false);\n  const {\n    0: requestError,\n    1: setRequestError\n  } = useState(null);\n  /**\n   * @TODO will update this in future, when required.\n   * Handles adding items to the cart.\n   *\n   * @return {void}\n   */\n  // const handleAddToCartLocalStorage = () => {\n  // \t// If component is rendered client side.\n  // \tif ( process.browser ) {\n  // \t\tlet existingCart = localStorage.getItem( 'woo-next-cart' );\n  // \t\t// If cart has item(s) already, update existing or add new item.\n  // \t\tif ( ! existingCart ) {\n  // \t\t\texistingCart = JSON.parse( existingCart );\n  // \t\t\tconst qtyToBeAdded = 1;\n  // \t\t\tconst updatedCart = updateCart( existingCart, product, qtyToBeAdded );\n  // \t\t\tsetCart( updatedCart );\n  // \t\t} else {\n  // \t\t\t/**\n  // \t\t\t * If No Items in the cart, create an empty array and add one.\n  // \t\t\t * @type {Array}\n  // \t\t\t */\n  // \t\t\tconst newCart = addFirstProduct( product );\n  // \t\t\tsetCart( newCart );\n  // \t\t}\n  // \t\t// Show View Cart Button\n  // \t\tsetShowViewCart( true )\n  // \t}\n  // };\n  // Get Cart Data.\n\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(GET_CART, {\n    notifyOnNetworkStatusChange: true,\n    onCompleted: () => {\n      //console.warn( 'completed GET_CART' );\n      // Update cart in the localStorage.\n      const updatedCart = getFormattedCart(data);\n      localStorage.setItem('woo-next-cart', JSON.stringify(updatedCart)); //localStorage.setItem( 'pi-next', JSON.stringify( {id:45} ) );\n      // Update cart data in React Context.\n\n      setCart(updatedCart);\n    }\n  }); // Add to Cart Mutation.\n\n  const [addToCart, {\n    data: addToCartRes,\n    loading: addToCartLoading,\n    error: addToCartError\n  }] = useMutation(ADD_TO_CART, {\n    variables: {\n      input: productQryInput\n    },\n    onCompleted: () => {\n      // console.warn( 'completed ADD_TO_CART' );\n      // If error.\n      if (addToCartError) {\n        setRequestError(addToCartError.graphQLErrors[0].message);\n      } // On Success:\n      // 1. Make the GET_CART query to update the cart with new values in React context.\n\n\n      refetch(); // 2. Show View Cart Button\n\n      setShowViewCart(true);\n      console.warn('completed ADD_TO_CART');\n    },\n    onError: error => {\n      if (error) {\n        setRequestError(error.graphQLErrors[0].message);\n      }\n    }\n  });\n\n  const handleAddToCartClick = () => {\n    //handleAddToCartLocalStorage();\n    setRequestError(null);\n    addToCart();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [addToCartLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Adding to Cart...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }, this), \"ExternalProduct\" === product.__typename ? /*#__PURE__*/_jsxDEV(\"a\", {\n      href: product.externalUrl,\n      target: \"_blank\",\n      className: \"px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\",\n      children: \"Buy now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 6\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddToCartClick,\n      className: \"px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current hover:bg-purple-600 hover:text-white hover:border-purple-600\",\n      children: \"Add to cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this), showViewCart ? /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/cart\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-3 py-1 rounded-sm text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\",\n        children: \"View Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 3\n  }, this);\n};\n\nexport default AddToCart;","map":{"version":3,"sources":["/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/src/components/cart/AddToCartButton.js"],"names":["useState","useContext","useQuery","useMutation","AppContext","getFormattedCart","updateCart","addFirstProduct","Link","v4","GET_CART","ADD_TO_CART","AddToCart","props","product","productQryInput","clientMutationId","productId","cart","setCart","showViewCart","setShowViewCart","requestError","setRequestError","loading","error","data","refetch","notifyOnNetworkStatusChange","onCompleted","updatedCart","localStorage","setItem","JSON","stringify","addToCart","addToCartRes","addToCartLoading","addToCartError","variables","input","graphQLErrors","message","console","warn","onError","handleAddToCartClick","__typename","externalUrl"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,gBAAT,EAA4BC,UAA5B,EAAyCC,eAAzC,QAAiE,iBAAjE;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,MAAMC,SAAS,GAAKC,KAAF,IAAa;AAE9B,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AAEA,QAAME,eAAe,GAAG;AACvBC,IAAAA,gBAAgB,EAAEP,EAAE,EADG;AACC;AACxBQ,IAAAA,SAAS,EAAEH,OAAO,CAACG;AAFI,GAAxB;AAKA,QAAM;AAAA,OAAEC,IAAF;AAAA,OAAQC;AAAR,MAAoBlB,UAAU,CAAEG,UAAF,CAApC;AACA,QAAM;AAAA,OAAEgB,YAAF;AAAA,OAAgBC;AAAhB,MAAoCrB,QAAQ,CAAE,KAAF,CAAlD;AACA,QAAM;AAAA,OAAEsB,YAAF;AAAA,OAAgBC;AAAhB,MAAoCvB,QAAQ,CAAE,IAAF,CAAlD;AAEA;AACD;AACA;AACA;AACA;AACA;AACC;AAEA;AACA;AAEA;AAGA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AACA,QAAM;AAAEwB,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA;AAAxB,MAAoCzB,QAAQ,CAAEQ,QAAF,EAAY;AAC7DkB,IAAAA,2BAA2B,EAAE,IADgC;AAE7DC,IAAAA,WAAW,EAAE,MAAM;AACjB;AAED;AACA,YAAMC,WAAW,GAAGzB,gBAAgB,CAAEqB,IAAF,CAApC;AACAK,MAAAA,YAAY,CAACC,OAAb,CAAsB,eAAtB,EAAuCC,IAAI,CAACC,SAAL,CAAgBJ,WAAhB,CAAvC,EALkB,CAMlB;AAEA;;AACAX,MAAAA,OAAO,CAAEW,WAAF,CAAP;AACA;AAZ4D,GAAZ,CAAlD,CArD8B,CAoE9B;;AACA,QAAM,CAAEK,SAAF,EAAa;AAAET,IAAAA,IAAI,EAAEU,YAAR;AAAsBZ,IAAAA,OAAO,EAAEa,gBAA/B;AAAiDZ,IAAAA,KAAK,EAAEa;AAAxD,GAAb,IAAyFnC,WAAW,CAAEQ,WAAF,EAAe;AACxH4B,IAAAA,SAAS,EAAE;AACVC,MAAAA,KAAK,EAAEzB;AADG,KAD6G;AAKxHc,IAAAA,WAAW,EAAE,MAAM;AAClB;AAEA;AACA,UAAKS,cAAL,EAAsB;AACrBf,QAAAA,eAAe,CAAEe,cAAc,CAACG,aAAf,CAA8B,CAA9B,EAAkCC,OAApC,CAAf;AACA,OANiB,CAQlB;AACA;;;AACAf,MAAAA,OAAO,GAVW,CAYlB;;AACAN,MAAAA,eAAe,CAAE,IAAF,CAAf;AACAsB,MAAAA,OAAO,CAACC,IAAR,CAAc,uBAAd;AACA,KApBuH;AAqBxHC,IAAAA,OAAO,EAAIpB,KAAF,IAAa;AACrB,UAAKA,KAAL,EAAa;AACZF,QAAAA,eAAe,CAAEE,KAAK,CAACgB,aAAN,CAAqB,CAArB,EAAyBC,OAA3B,CAAf;AACA;AACD;AAzBuH,GAAf,CAA1G;;AA4BA,QAAMI,oBAAoB,GAAG,MAAM;AAC/B;AACHvB,IAAAA,eAAe,CAAE,IAAF,CAAf;AACAY,IAAAA,SAAS;AACT,GAJD;;AAMA,sBACC;AAAA,eAEEE,gBAAgB,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFtB,EAKG,sBAAsBvB,OAAO,CAACiC,UAA9B,gBACA;AAAG,MAAA,IAAI,EAAGjC,OAAO,CAACkC,WAAlB;AAAgC,MAAA,MAAM,EAAC,QAAvC;AAAgD,MAAA,SAAS,EAAC,gJAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,gBAGD;AAAQ,MAAA,OAAO,EAAGF,oBAAlB;AAAyC,MAAA,SAAS,EAAC,mIAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,EAUG1B,YAAY,gBACb,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA,6BAAmB;AAAQ,QAAA,SAAS,EAAC,2IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnB;AAAA;AAAA;AAAA;AAAA,YADa,GAEV,EAZL;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA,CAvHD;;AAyHA,eAAeR,SAAf","sourcesContent":["import { useState, useContext } from \"react\";\nimport { useQuery, useMutation } from '@apollo/client';\nimport { AppContext } from \"../context/AppContext\";\nimport { getFormattedCart , updateCart , addFirstProduct  } from \"../../functions\";\nimport Link from \"next/link\";\nimport { v4 } from 'uuid';\nimport GET_CART from \"../../queries/get-cart\";\nimport ADD_TO_CART from \"../../mutations/add-to-cart\";\n\nconst AddToCart = ( props ) => {\n\n\tconst { product } = props;\n\n\tconst productQryInput = {\n\t\tclientMutationId: v4(), // Generate a unique id.\n\t\tproductId: product.productId,\n\t};\n\n\tconst [ cart, setCart ] = useContext( AppContext );\n\tconst [ showViewCart, setShowViewCart ] = useState( false );\n\tconst [ requestError, setRequestError ] = useState( null );\n\n\t/**\n\t * @TODO will update this in future, when required.\n\t * Handles adding items to the cart.\n\t *\n\t * @return {void}\n\t */\n\t// const handleAddToCartLocalStorage = () => {\n\t\n\t// \t// If component is rendered client side.\n\t// \tif ( process.browser ) {\n\t\n\t// \t\tlet existingCart = localStorage.getItem( 'woo-next-cart' );\n\t\n\n\t// \t\t// If cart has item(s) already, update existing or add new item.\n\t// \t\tif ( ! existingCart ) {\n\t\n\t// \t\t\texistingCart = JSON.parse( existingCart );\n\t\n\t// \t\t\tconst qtyToBeAdded = 1;\n\t\n\t// \t\t\tconst updatedCart = updateCart( existingCart, product, qtyToBeAdded );\n\t\n\t// \t\t\tsetCart( updatedCart );\n\t\n\t// \t\t} else {\n\t// \t\t\t/**\n\t// \t\t\t * If No Items in the cart, create an empty array and add one.\n\t// \t\t\t * @type {Array}\n\t// \t\t\t */\n\t// \t\t\tconst newCart = addFirstProduct( product );\n\t// \t\t\tsetCart( newCart );\n\t// \t\t}\n\t\n\t// \t\t// Show View Cart Button\n\t// \t\tsetShowViewCart( true )\n\t// \t}\n\t// };\n\n\t// Get Cart Data.\n\tconst { loading, error, data, refetch } = useQuery( GET_CART, {\n\t\tnotifyOnNetworkStatusChange: true,\n\t\tonCompleted: () => {\n\t\t\t //console.warn( 'completed GET_CART' );\n\n\t\t\t// Update cart in the localStorage.\n\t\t\tconst updatedCart = getFormattedCart( data );\n\t\t\tlocalStorage.setItem( 'woo-next-cart', JSON.stringify( updatedCart ) );\n\t\t\t//localStorage.setItem( 'pi-next', JSON.stringify( {id:45} ) );\n\n\t\t\t// Update cart data in React Context.\n\t\t\tsetCart( updatedCart );\n\t\t}\n\t} );\n\n\t// Add to Cart Mutation.\n\tconst [ addToCart, { data: addToCartRes, loading: addToCartLoading, error: addToCartError }] = useMutation( ADD_TO_CART, {\n\t\tvariables: {\n\t\t\tinput: productQryInput,\n\t\t},\n\t\n\t\tonCompleted: () => {\n\t\t\t// console.warn( 'completed ADD_TO_CART' );\n\n\t\t\t// If error.\n\t\t\tif ( addToCartError ) {\n\t\t\t\tsetRequestError( addToCartError.graphQLErrors[ 0 ].message );\n\t\t\t}\n\n\t\t\t// On Success:\n\t\t\t// 1. Make the GET_CART query to update the cart with new values in React context.\n\t\t\trefetch();\n\n\t\t\t// 2. Show View Cart Button\n\t\t\tsetShowViewCart( true )\n\t\t\tconsole.warn( 'completed ADD_TO_CART' );\n\t\t},\n\t\tonError: ( error ) => {\n\t\t\tif ( error ) {\n\t\t\t\tsetRequestError( error.graphQLErrors[ 0 ].message );\n\t\t\t}\n\t\t}\n\t} );\n\n\tconst handleAddToCartClick = () => {\n\t    //handleAddToCartLocalStorage();\n\t\tsetRequestError( null );\n\t\taddToCart();\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{/* Add To Cart Loading*/}\n\t\t\t{addToCartLoading && <p>Adding to Cart...</p>}\n\n\t\t\t{/*\tCheck if its an external product then put its external buy link */}\n\t\t\t{ \"ExternalProduct\" === product.__typename ? (\n\t\t\t\t\t<a href={ product.externalUrl } target=\"_blank\" className=\"px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\">Buy now</a>\n\t\t\t\t) :\n\t\t\t\t<button onClick={ handleAddToCartClick } className=\"px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current hover:bg-purple-600 hover:text-white hover:border-purple-600\">Add to cart</button>\n\t\t\t}\n\t\t\t{ showViewCart ? (\n\t\t\t\t<Link href=\"/cart\"><button className=\"px-3 py-1 rounded-sm text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\">View Cart</button></Link>\n\t\t\t) : '' }\n\t\t</div>\n\t);\n};\n\nexport default AddToCart;\n"]},"metadata":{},"sourceType":"module"}