{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/pages/[slug].js\";\nimport { useRouter } from 'next/router';\nimport ErrorPage from 'next/error';\nimport Container from '../components/container';\nimport PostBody from '../components/post-body';\nimport MoreStories from '../components/more-stories';\nimport PostHeader from '../components/post-header';\nimport SectionSeparator from '../components/section-separator';\nimport Layout from '../components/Layout';\nimport { getAllPostsWithSlug, getPostAndMorePosts } from '../lib/pageapi';\nimport PostTitle from '../components/post-title';\nimport Head from 'next/head';\nimport { CMS_NAME } from '../lib/constants';\nimport Tags from '../components/tags';\nimport { ApolloProvider } from '@apollo/client';\nimport client from \"../components/Apolloclient\";\nimport { MDBContainer, MDBCard, MDBCardBody } from 'mdb-react-ui-kit';\nexport default function Post({\n  page,\n  pages,\n  preview\n}) {\n  var _posts, _page$featuredImage, _page$featuredImage$n, _page$featuredImage2, _page$author;\n\n  const router = useRouter();\n  const morePosts = (_posts = posts) === null || _posts === void 0 ? void 0 : _posts.edges;\n\n  if (!router.isFallback && !(page !== null && page !== void 0 && page.slug)) {\n    return /*#__PURE__*/_jsxDEV(ErrorPage, {\n      statusCode: 404\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: router.isFallback ? /*#__PURE__*/_jsxDEV(PostTitle, {\n          children: \"Loading\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(MDBContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Head, {\n              children: [/*#__PURE__*/_jsxDEV(\"title\", {\n                children: [page.title, \" | Next.js \", CMS_NAME]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n                property: \"og:image\",\n                content: (_page$featuredImage = page.featuredImage) === null || _page$featuredImage === void 0 ? void 0 : (_page$featuredImage$n = _page$featuredImage.node) === null || _page$featuredImage$n === void 0 ? void 0 : _page$featuredImage$n.sourceUrl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MDBCard, {\n              children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n                children: [/*#__PURE__*/_jsxDEV(PostHeader, {\n                  title: page.title,\n                  coverImage: (_page$featuredImage2 = page.featuredImage) === null || _page$featuredImage2 === void 0 ? void 0 : _page$featuredImage2.node,\n                  date: page.date,\n                  author: (_page$author = page.author) === null || _page$author === void 0 ? void 0 : _page$author.node,\n                  categories: page.categories\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(PostBody, {\n                  content: page.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n                  children: page.tags.edges.length > 0 && /*#__PURE__*/_jsxDEV(Tags, {\n                    tags: page.tags\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 54\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SectionSeparator, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), morePosts.length > 0 && /*#__PURE__*/_jsxDEV(MoreStories, {\n            pages: morePosts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n}\nexport async function getStaticProps({\n  params,\n  preview = false,\n  previewData\n}) {\n  const data = await getPostAndMorePosts(params.slug, preview, previewData);\n  return {\n    props: {\n      preview,\n      page: data.page,\n      pages: data.pages\n    }\n  };\n}\nexport async function more() {\n  const allPosts = await getAllPostsWithSlug();\n  console.log(allPosts);\n  return {\n    paths: allPosts.edges.map(({\n      node\n    }) => `${node.slug}`) || [],\n    fallback: true\n  };\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/pages/[slug].js"],"names":["useRouter","ErrorPage","Container","PostBody","MoreStories","PostHeader","SectionSeparator","Layout","getAllPostsWithSlug","getPostAndMorePosts","PostTitle","Head","CMS_NAME","Tags","ApolloProvider","client","MDBContainer","MDBCard","MDBCardBody","Post","page","pages","preview","router","morePosts","posts","edges","isFallback","slug","title","featuredImage","node","sourceUrl","date","author","categories","content","tags","length","getStaticProps","params","previewData","data","props","more","allPosts","console","log","paths","map","fallback"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport ErrorPage from 'next/error'\nimport Container from '../components/container'\nimport PostBody from '../components/post-body'\nimport MoreStories from '../components/more-stories'\nimport PostHeader from '../components/post-header'\nimport SectionSeparator from '../components/section-separator'\nimport Layout from '../components/Layout'\nimport { getAllPostsWithSlug, getPostAndMorePosts } from '../lib/pageapi'\nimport PostTitle from '../components/post-title'\nimport Head from 'next/head'\nimport { CMS_NAME } from '../lib/constants'\nimport Tags from '../components/tags'\nimport { ApolloProvider } from '@apollo/client';\nimport client from \"../components/Apolloclient\";\nimport {MDBContainer, MDBCard,MDBCardBody } from 'mdb-react-ui-kit';\n\n\nexport default function Post({ page, pages, preview }) {\n    const router = useRouter()\n    const morePosts = posts?.edges\n  \n    if (!router.isFallback && !page?.slug) {\n      return <ErrorPage statusCode={404} />\n    }\n  \n    return (\n      \n      <ApolloProvider client={client}>\n  \n      <Layout>\n        <Container>\n          {router.isFallback ? (\n            <PostTitle>Loading…</PostTitle>\n          ) : (\n            <>\n              <MDBContainer>\n                <Head>\n                  <title>\n                    {page.title} | Next.js {CMS_NAME}\n                  </title>\n                  <meta\n                    property=\"og:image\"\n                    content={page.featuredImage?.node?.sourceUrl}\n                  />\n                </Head>\n                <MDBCard >\n                  <MDBCardBody>\n                    <PostHeader\n                      title={page.title}\n                      coverImage={page.featuredImage?.node}\n                      date={page.date}\n                      author={page.author?.node}\n                      categories={page.categories}\n                    />\n                  <PostBody content={page.content} />\n                  <footer>\n                      {page.tags.edges.length > 0 && <Tags tags={page.tags} />}\n                  </footer>\n                </MDBCardBody>\n              </MDBCard>\n              </MDBContainer>\n  \n              <SectionSeparator />\n              {morePosts.length > 0 && <MoreStories pages={morePosts} />}\n            </>\n          )}\n        </Container>\n      </Layout>\n      </ApolloProvider>\n    )\n  }\n  \n  export async function getStaticProps({ params, preview = false, previewData }) {\n    const data = await getPostAndMorePosts(params.slug, preview, previewData)\n  \n    return {\n      props: {\n        preview,\n        page: data.page,\n        pages: data.pages,\n      },\n    }\n  }\n  \n  export async function more() {\n    const allPosts = await getAllPostsWithSlug()\n    console.log(allPosts)\n    return {\n      paths: allPosts.edges.map(({ node }) => `${node.slug}`) || [],\n      fallback: true,\n    }\n  }"]},"metadata":{},"sourceType":"module"}