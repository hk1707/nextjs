{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/pages/posts/[slug].js\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport ErrorPage from 'next/error';\nimport Container from '../../components/container';\nimport PostBody from '../../components/post-body';\nimport MoreStories from '../../components/more-stories';\nimport Header from '../../components/header';\nimport PostHeader from '../../components/post-header';\nimport SectionSeparator from '../../components/section-separator';\nimport Layout from '../../components/layout';\nimport PostTitle from '../../components/post-title';\nimport Head from 'next/head';\nimport { CMS_NAME } from '../../lib/constants';\nimport Tags from '../../components/tags';\nexport var __N_SSG = true;\nexport default function Post(_ref) {\n  _s();\n\n  var _post$featuredImage, _post$featuredImage$n, _post$featuredImage2, _post$author;\n\n  var post = _ref.post,\n      posts = _ref.posts,\n      preview = _ref.preview;\n  var router = useRouter();\n  var morePosts = posts === null || posts === void 0 ? void 0 : posts.edges;\n\n  if (!router.isFallback && !(post !== null && post !== void 0 && post.slug)) {\n    return /*#__PURE__*/_jsxDEV(ErrorPage, {\n      statusCode: 404\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    preview: preview,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), router.isFallback ? /*#__PURE__*/_jsxDEV(PostTitle, {\n        children: \"Loading\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"article\", {\n          children: [/*#__PURE__*/_jsxDEV(Head, {\n            children: [/*#__PURE__*/_jsxDEV(\"title\", {\n              children: [post.title, \" | Next.js Blog Example with \", CMS_NAME]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n              property: \"og:image\",\n              content: (_post$featuredImage = post.featuredImage) === null || _post$featuredImage === void 0 ? void 0 : (_post$featuredImage$n = _post$featuredImage.node) === null || _post$featuredImage$n === void 0 ? void 0 : _post$featuredImage$n.sourceUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PostHeader, {\n            title: post.title,\n            coverImage: (_post$featuredImage2 = post.featuredImage) === null || _post$featuredImage2 === void 0 ? void 0 : _post$featuredImage2.node,\n            date: post.date,\n            author: (_post$author = post.author) === null || _post$author === void 0 ? void 0 : _post$author.node,\n            categories: post.categories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PostBody, {\n            content: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n            children: post.tags.edges.length > 0 && /*#__PURE__*/_jsxDEV(Tags, {\n              tags: post.tags\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SectionSeparator, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), morePosts.length > 0 && /*#__PURE__*/_jsxDEV(MoreStories, {\n          posts: morePosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/pages/posts/[slug].js"],"names":["useRouter","ErrorPage","Container","PostBody","MoreStories","Header","PostHeader","SectionSeparator","Layout","PostTitle","Head","CMS_NAME","Tags","Post","post","posts","preview","router","morePosts","edges","isFallback","slug","title","featuredImage","node","sourceUrl","date","author","categories","content","tags","length"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport ErrorPage from 'next/error'\nimport Container from '../../components/container'\nimport PostBody from '../../components/post-body'\nimport MoreStories from '../../components/more-stories'\nimport Header from '../../components/header'\nimport PostHeader from '../../components/post-header'\nimport SectionSeparator from '../../components/section-separator'\nimport Layout from '../../components/layout'\nimport { getAllPostsWithSlug, getPostAndMorePosts } from '../../lib/api'\nimport PostTitle from '../../components/post-title'\nimport Head from 'next/head'\nimport { CMS_NAME } from '../../lib/constants'\nimport Tags from '../../components/tags'\n\nexport default function Post({ post, posts, preview }) {\n  const router = useRouter()\n  const morePosts = posts?.edges\n\n  if (!router.isFallback && !post?.slug) {\n    return <ErrorPage statusCode={404} />\n  }\n\n  return (\n    <Layout preview={preview}>\n      <Container>\n        <Header />\n        {router.isFallback ? (\n          <PostTitle>Loadingâ€¦</PostTitle>\n        ) : (\n          <>\n            <article>\n              <Head>\n                <title>\n                  {post.title} | Next.js Blog Example with {CMS_NAME}\n                </title>\n                <meta\n                  property=\"og:image\"\n                  content={post.featuredImage?.node?.sourceUrl}\n                />\n              </Head>\n              <PostHeader\n                title={post.title}\n                coverImage={post.featuredImage?.node}\n                date={post.date}\n                author={post.author?.node}\n                categories={post.categories}\n              />\n              <PostBody content={post.content} />\n              <footer>\n                {post.tags.edges.length > 0 && <Tags tags={post.tags} />}\n              </footer>\n            </article>\n\n            <SectionSeparator />\n            {morePosts.length > 0 && <MoreStories posts={morePosts} />}\n          </>\n        )}\n      </Container>\n    </Layout>\n  )\n}\n\nexport async function getStaticProps({ params, preview = false, previewData }) {\n  const data = await getPostAndMorePosts(params.slug, preview, previewData)\n\n  return {\n    props: {\n      preview,\n      post: data.post,\n      posts: data.posts,\n    },\n  }\n}\n\nexport async function getStaticPaths() {\n  const allPosts = await getAllPostsWithSlug()\n\n  return {\n    paths: allPosts.edges.map(({ node }) => `/posts/${node.slug}`) || [],\n    fallback: true,\n  }\n}"]},"metadata":{},"sourceType":"module"}