{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useContext } from \"react\";\nimport { useQuery, useMutation } from '@apollo/client';\nimport { AppContext } from \"../context/AppContext\";\nimport { getFormattedCart } from \"../../functions\";\nimport Link from \"next/link\";\nimport { v4 } from 'uuid';\nimport GET_CART from \"../../queries/get-cart\";\nimport ADD_TO_CART from \"../../mutations/add-to-cart\";\n\nvar AddToCart = function AddToCart(props) {\n  var product = props.product;\n  var productQryInput = {\n    clientMutationId: v4(),\n    // Generate a unique id.\n    productId: product.productId\n  };\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext[0],\n      setCart = _useContext[1];\n\n  var _useState = useState(false),\n      showViewCart = _useState[0],\n      setShowViewCart = _useState[1];\n\n  var _useState2 = useState(null),\n      requestError = _useState2[0],\n      setRequestError = _useState2[1];\n  /**\n   * @TODO will update this in future, when required.\n   * Handles adding items to the cart.\n   *\n   * @return {void}\n   */\n\n\n  var handleAddToCartLocalStorage = function handleAddToCartLocalStorage() {\n    // If component is rendered client side.\n    if (true) {\n      var existingCart = localStorage.getItem('woo-next-cart'); // If cart has item(s) already, update existing or add new item.\n\n      if (existingCart) {\n        existingCart = JSON.parse(existingCart);\n        var qtyToBeAdded = 1;\n        var updatedCart = updateCart(existingCart, product, qtyToBeAdded);\n        setCart(updatedCart);\n      } else {\n        /**\n         * If No Items in the cart, create an empty array and add one.\n         * @type {Array}\n         */\n        var newCart = addFirstProduct(product);\n        setCart(newCart);\n      } // Show View Cart Button\n\n\n      setShowViewCart(true);\n    }\n  }; // Get Cart Data.\n\n\n  var _useQuery = useQuery(GET_CART, {\n    notifyOnNetworkStatusChange: true,\n    onCompleted: function onCompleted() {\n      // console.warn( 'completed GET_CART' );\n      // Update cart in the localStorage.\n      var updatedCart = getFormattedCart(data);\n      localStorage.setItem('woo-next-cart', JSON.stringify(updatedCart)); // Update cart data in React Context.\n\n      setCart(updatedCart);\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      refetch = _useQuery.refetch; // Add to Cart Mutation.\n\n\n  var _useMutation = useMutation(ADD_TO_CART, {\n    variables: {\n      input: productQryInput\n    },\n    onCompleted: function onCompleted() {\n      console.warn('completed ADD_TO_CART'); // If error.\n\n      if (addToCartError) {\n        setRequestError(addToCartError.graphQLErrors[0].message);\n      } // On Success:\n      // 1. Make the GET_CART query to update the cart with new values in React context.\n\n\n      refetch(); // 2. Show View Cart Button\n\n      setShowViewCart(true);\n    },\n    onError: function onError(error) {\n      if (error) {\n        setRequestError(error.graphQLErrors[0].message);\n      }\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addToCart = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      addToCartRes = _useMutation2$.data,\n      addToCartLoading = _useMutation2$.loading,\n      addToCartError = _useMutation2$.error;\n\n  var handleAddToCartClick = function handleAddToCartClick() {\n    // handleAddToCartLocalStorage();\n    setRequestError(null);\n    addToCart();\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [addToCartLoading && /*#__PURE__*/_jsx(\"p\", {\n      children: \"Adding to Cart...\"\n    }), \"ExternalProduct\" === product.__typename ? /*#__PURE__*/_jsx(\"a\", {\n      href: product.externalUrl,\n      target: \"_blank\",\n      className: \"px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\",\n      children: \"Buy now\"\n    }) : /*#__PURE__*/_jsx(\"button\", {\n      onClick: handleAddToCartClick,\n      className: \"px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current hover:bg-purple-600 hover:text-white hover:border-purple-600\",\n      children: \"Add to cart\"\n    }), showViewCart ? /*#__PURE__*/_jsx(Link, {\n      href: \"/cart\",\n      children: /*#__PURE__*/_jsx(\"button\", {\n        className: \"px-3 py-1 rounded-sm text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\",\n        children: \"View Cart\"\n      })\n    }) : '']\n  });\n};\n\nexport default AddToCart;","map":null,"metadata":{},"sourceType":"module"}