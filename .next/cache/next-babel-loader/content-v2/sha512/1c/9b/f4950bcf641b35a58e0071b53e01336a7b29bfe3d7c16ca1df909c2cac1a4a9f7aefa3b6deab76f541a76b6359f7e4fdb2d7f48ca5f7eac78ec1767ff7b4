{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/src/components/cart/cart-page/CartItemsContainer.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Link from 'next/link';\nimport { useContext, useState } from 'react';\nimport { AppContext } from \"../../context/AppContext\";\nimport { getFormattedCart, getUpdatedItems } from '../../../functions';\nimport CartItem from \"./CartItem\";\nimport { v4 } from 'uuid';\nimport { useMutation, useQuery } from '@apollo/client';\nimport UPDATE_CART from \"../../../mutations/update-cart\";\nimport GET_CART from \"../../../queries/get-cart\";\nimport CLEAR_CART_MUTATION from \"../../../mutations/clear-cart\";\nimport { isEmpty } from 'lodash';\n\nvar CartItemsContainer = function CartItemsContainer() {\n  _s();\n\n  // @TODO wil use it in future variations of the project.\n  var _useContext = useContext(AppContext),\n      cart = _useContext[0],\n      setCart = _useContext[1];\n\n  var _useState = useState(null),\n      requestError = _useState[0],\n      setRequestError = _useState[1]; // Get Cart Data.\n\n\n  var _useQuery = useQuery(GET_CART, {\n    notifyOnNetworkStatusChange: true,\n    onCompleted: function onCompleted() {\n      // Update cart in the localStorage.\n      var updatedCart = data;\n      localStorage.setItem('woo-next-cart', JSON.stringify(data)); // Update cart data in React Context.\n\n      setCart(updatedCart);\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      refetch = _useQuery.refetch; // Update Cart Mutation.\n\n\n  var _useMutation = useMutation(UPDATE_CART, {\n    onCompleted: function onCompleted() {\n      refetch();\n      console.log('completed GET_CART', data);\n    },\n    onError: function onError(error) {\n      if (error) {\n        var _error$graphQLErrors, _error$graphQLErrors$;\n\n        var errorMessage = error !== null && error !== void 0 && (_error$graphQLErrors = error.graphQLErrors) !== null && _error$graphQLErrors !== void 0 && (_error$graphQLErrors$ = _error$graphQLErrors[0]) !== null && _error$graphQLErrors$ !== void 0 && _error$graphQLErrors$.message ? error.graphQLErrors[0].message : '';\n        setRequestError(errorMessage);\n      }\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateCart = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      updateCartResponse = _useMutation2$.data,\n      updateCartProcessing = _useMutation2$.loading,\n      updateCartError = _useMutation2$.error; // Update Cart Mutation.\n\n\n  var _useMutation3 = useMutation(CLEAR_CART_MUTATION, {\n    onCompleted: function onCompleted() {\n      refetch();\n    },\n    onError: function onError(error) {\n      if (error) {\n        var _error$graphQLErrors2, _error$graphQLErrors$2;\n\n        var errorMessage = !isEmpty(error === null || error === void 0 ? void 0 : (_error$graphQLErrors2 = error.graphQLErrors) === null || _error$graphQLErrors2 === void 0 ? void 0 : _error$graphQLErrors2[0]) ? (_error$graphQLErrors$2 = error.graphQLErrors[0]) === null || _error$graphQLErrors$2 === void 0 ? void 0 : _error$graphQLErrors$2.message : '';\n        setRequestError(errorMessage);\n      }\n    }\n  }),\n      _useMutation4 = _slicedToArray(_useMutation3, 2),\n      clearCart = _useMutation4[0],\n      _useMutation4$ = _useMutation4[1],\n      clearCartRes = _useMutation4$.data,\n      clearCartProcessing = _useMutation4$.loading,\n      clearCartError = _useMutation4$.error;\n  /*\n   * Handle remove product click.\n   *\n   * @param {Object} event event\n   * @param {Integer} Product Id.\n   *\n   * @return {void}\n   */\n\n\n  var handleRemoveProductClick = function handleRemoveProductClick(event, cartKey, products) {\n    console.log(products);\n    event.stopPropagation();\n\n    if (products.length && products.length != 0) {\n      // By passing the newQty to 0 in updateCart Mutation, it will remove the item.\n      var newQty = 0;\n      var updatedItems = getUpdatedItems(products, newQty, cartKey);\n      updateCart({\n        variables: {\n          input: {\n            clientMutationId: v4(),\n            items: updatedItems\n          }\n        }\n      });\n    }\n  }; // Clear the entire cart.\n\n\n  var handleClearCart = function handleClearCart(event) {\n    event.stopPropagation();\n\n    if (clearCartProcessing) {\n      return;\n    }\n\n    clearCart({\n      variables: {\n        input: {\n          clientMutationId: v4(),\n          all: true\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart product-cart-container container mx-auto my-32 px-4 xl:px-0\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(CartItemsContainer, \"sElvN/Auab7qMrW6kpFlploOoNc=\", false, function () {\n  return [useQuery, useMutation, useMutation];\n});\n\n_c = CartItemsContainer;\nexport default CartItemsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartItemsContainer\");","map":{"version":3,"sources":["/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/src/components/cart/cart-page/CartItemsContainer.js"],"names":["Link","useContext","useState","AppContext","getFormattedCart","getUpdatedItems","CartItem","v4","useMutation","useQuery","UPDATE_CART","GET_CART","CLEAR_CART_MUTATION","isEmpty","CartItemsContainer","cart","setCart","requestError","setRequestError","notifyOnNetworkStatusChange","onCompleted","updatedCart","data","localStorage","setItem","JSON","stringify","loading","error","refetch","console","log","onError","errorMessage","graphQLErrors","message","updateCart","updateCartResponse","updateCartProcessing","updateCartError","clearCart","clearCartRes","clearCartProcessing","clearCartError","handleRemoveProductClick","event","cartKey","products","stopPropagation","length","newQty","updatedItems","variables","input","clientMutationId","items","handleClearCart","all"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,gBAAT,EAA2BC,eAA3B,QAAkD,oBAAlD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;AACA,SAAQC,OAAR,QAAsB,QAAtB;;AAGA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAAA;;AAGhC;AAHgC,oBAINb,UAAU,CAAEE,UAAF,CAJJ;AAAA,MAIxBY,IAJwB;AAAA,MAIlBC,OAJkB;;AAAA,kBAKQd,QAAQ,CAAE,IAAF,CALhB;AAAA,MAKzBe,YALyB;AAAA,MAKXC,eALW,iBAOhC;;;AAPgC,kBAQUT,QAAQ,CAAEE,QAAF,EAAY;AAC7DQ,IAAAA,2BAA2B,EAAE,IADgC;AAE7DC,IAAAA,WAAW,EAAE,uBAAM;AAIlB;AACA,UAAMC,WAAW,GAAKC,IAAtB;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAsB,eAAtB,EAAuCC,IAAI,CAACC,SAAL,CAAgBJ,IAAhB,CAAvC,EANkB,CAQlB;;AACAN,MAAAA,OAAO,CAAEK,WAAF,CAAP;AACA;AAZ4D,GAAZ,CARlB;AAAA,MAQxBM,OARwB,aAQxBA,OARwB;AAAA,MAQfC,KARe,aAQfA,KARe;AAAA,MAQRN,IARQ,aAQRA,IARQ;AAAA,MAQFO,OARE,aAQFA,OARE,EAuBhC;;;AAvBgC,qBAwB0ErB,WAAW,CAAEE,WAAF,EAAe;AACnIU,IAAAA,WAAW,EAAE,uBAAM;AAClBS,MAAAA,OAAO;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAa,oBAAb,EAAmCT,IAAnC;AACA,KAJkI;AAKnIU,IAAAA,OAAO,EAAE,iBAAEJ,KAAF,EAAa;AACrB,UAAKA,KAAL,EAAa;AAAA;;AACZ,YAAMK,YAAY,GAAGL,KAAK,SAAL,IAAAA,KAAK,WAAL,4BAAAA,KAAK,CAAEM,aAAP,+FAAwB,CAAxB,yEAA6BC,OAA7B,GAAuCP,KAAK,CAACM,aAAN,CAAqB,CAArB,EAAyBC,OAAhE,GAA0E,EAA/F;AACAjB,QAAAA,eAAe,CAAEe,YAAF,CAAf;AACA;AACD;AAVkI,GAAf,CAxBrF;AAAA;AAAA,MAwBzBG,UAxByB;AAAA;AAAA,MAwBLC,kBAxBK,kBAwBXf,IAxBW;AAAA,MAwBwBgB,oBAxBxB,kBAwBeX,OAxBf;AAAA,MAwBqDY,eAxBrD,kBAwB8CX,KAxB9C,EAqChC;;;AArCgC,sBAsCiEpB,WAAW,CAAEI,mBAAF,EAAuB;AAClIQ,IAAAA,WAAW,EAAE,uBAAM;AAClBS,MAAAA,OAAO;AACP,KAHiI;AAIlIG,IAAAA,OAAO,EAAE,iBAAEJ,KAAF,EAAa;AACrB,UAAKA,KAAL,EAAa;AAAA;;AACZ,YAAMK,YAAY,GAAG,CAAEpB,OAAO,CAACe,KAAD,aAACA,KAAD,gDAACA,KAAK,CAAEM,aAAR,0DAAC,sBAAwB,CAAxB,CAAD,CAAT,6BAAyCN,KAAK,CAACM,aAAN,CAAqB,CAArB,CAAzC,2DAAyC,uBAA0BC,OAAnE,GAA6E,EAAlG;AACAjB,QAAAA,eAAe,CAAEe,YAAF,CAAf;AACA;AACD;AATiI,GAAvB,CAtC5E;AAAA;AAAA,MAsCzBO,SAtCyB;AAAA;AAAA,MAsCNC,YAtCM,kBAsCZnB,IAtCY;AAAA,MAsCiBoB,mBAtCjB,kBAsCQf,OAtCR;AAAA,MAsC6CgB,cAtC7C,kBAsCsCf,KAtCtC;AAkDhC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,MAAMgB,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAEC,KAAF,EAASC,OAAT,EAAkBC,QAAlB,EAAgC;AAEhEjB,IAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ;AAEAF,IAAAA,KAAK,CAACG,eAAN;;AACA,QAAKD,QAAQ,CAACE,MAAT,IAAoBF,QAAQ,CAACE,MAAT,IAAmB,CAA5C,EAA+C;AAE9C;AACA,UAAMC,MAAM,GAAG,CAAf;AACA,UAAMC,YAAY,GAAG9C,eAAe,CAAE0C,QAAF,EAAYG,MAAZ,EAAoBJ,OAApB,CAApC;AAEAV,MAAAA,UAAU,CAAE;AACXgB,QAAAA,SAAS,EAAE;AACVC,UAAAA,KAAK,EAAE;AACNC,YAAAA,gBAAgB,EAAE/C,EAAE,EADd;AAENgD,YAAAA,KAAK,EAAEJ;AAFD;AADG;AADA,OAAF,CAAV;AAQA;AACD,GApBD,CA1DgC,CAgFhC;;;AACA,MAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAEX,KAAF,EAAa;AAEpCA,IAAAA,KAAK,CAACG,eAAN;;AAEA,QAAKN,mBAAL,EAA2B;AAC1B;AACA;;AAEDF,IAAAA,SAAS,CAAE;AACVY,MAAAA,SAAS,EAAE;AACVC,QAAAA,KAAK,EAAE;AACNC,UAAAA,gBAAgB,EAAE/C,EAAE,EADd;AAENkD,UAAAA,GAAG,EAAE;AAFC;AADG;AADD,KAAF,CAAT;AAQA,GAhBD;;AAkBA,sBACC;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,WADD;AAIA,CAvGD;;GAAM3C,kB;UAQqCL,Q,EAgBgED,W,EAcTA,W;;;KAtC5FM,kB;AAyGN,eAAeA,kBAAf","sourcesContent":["import Link from 'next/link';\nimport { useContext, useState } from 'react';\nimport { AppContext } from \"../../context/AppContext\";\nimport { getFormattedCart, getUpdatedItems } from '../../../functions';\nimport CartItem from \"./CartItem\";\nimport { v4 } from 'uuid';\nimport { useMutation, useQuery } from '@apollo/client';\nimport UPDATE_CART from \"../../../mutations/update-cart\";\nimport GET_CART from \"../../../queries/get-cart\";\nimport CLEAR_CART_MUTATION from \"../../../mutations/clear-cart\";\nimport {isEmpty} from 'lodash'\n\n\nconst CartItemsContainer = () => {\n\n\n\t// @TODO wil use it in future variations of the project.\n\tconst [ cart, setCart ] = useContext( AppContext );\n\tconst [requestError, setRequestError] = useState( null );\n\n\t// Get Cart Data.\n\tconst { loading, error, data, refetch } = useQuery( GET_CART, {\n\t\tnotifyOnNetworkStatusChange: true,\n\t\tonCompleted: () => {\n\n\t\t\t \n\n\t\t\t// Update cart in the localStorage.\n\t\t\tconst updatedCart = ( data );\n\t\t\tlocalStorage.setItem( 'woo-next-cart', JSON.stringify( data ) );\n\n\t\t\t// Update cart data in React Context.\n\t\t\tsetCart( updatedCart );\n\t\t}\n\t} );\n\n\t// Update Cart Mutation.\n\tconst [updateCart, { data: updateCartResponse, loading: updateCartProcessing, error: updateCartError }] = useMutation( UPDATE_CART, {\n\t\tonCompleted: () => {\n\t\t\trefetch();\n\t\t\tconsole.log( 'completed GET_CART', data );\n\t\t},\n\t\tonError: ( error ) => {\n\t\t\tif ( error ) {\n\t\t\t\tconst errorMessage = error?.graphQLErrors?.[ 0 ]?.message ? error.graphQLErrors[ 0 ].message : '';\n\t\t\t\tsetRequestError( errorMessage );\n\t\t\t}\n\t\t}\n\t} );\n\n\t// Update Cart Mutation.\n\tconst [clearCart, { data: clearCartRes, loading: clearCartProcessing, error: clearCartError }] = useMutation( CLEAR_CART_MUTATION, {\n\t\tonCompleted: () => {\n\t\t\trefetch();\n\t\t},\n\t\tonError: ( error ) => {\n\t\t\tif ( error ) {\n\t\t\t\tconst errorMessage = ! isEmpty(error?.graphQLErrors?.[ 0 ]) ? error.graphQLErrors[ 0 ]?.message : '';\n\t\t\t\tsetRequestError( errorMessage );\n\t\t\t}\n\t\t}\n\t} );\n\n\t/*\n\t * Handle remove product click.\n\t *\n\t * @param {Object} event event\n\t * @param {Integer} Product Id.\n\t *\n\t * @return {void}\n\t */\n\tconst handleRemoveProductClick = ( event, cartKey, products ) => {\n\n\t\tconsole.log(products);\n\n\t\tevent.stopPropagation();\n\t\tif ( products.length  && products.length != 0) {\n\n\t\t\t// By passing the newQty to 0 in updateCart Mutation, it will remove the item.\n\t\t\tconst newQty = 0;\n\t\t\tconst updatedItems = getUpdatedItems( products, newQty, cartKey );\n\n\t\t\tupdateCart( {\n\t\t\t\tvariables: {\n\t\t\t\t\tinput: {\n\t\t\t\t\t\tclientMutationId: v4(),\n\t\t\t\t\t\titems: updatedItems\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t} );\n\t\t}\n\t};\n\n\t// Clear the entire cart.\n\tconst handleClearCart = ( event ) => {\n\n\t\tevent.stopPropagation();\n\n\t\tif ( clearCartProcessing ) {\n\t\t\treturn;\n\t\t}\n\n\t\tclearCart( {\n\t\t\tvariables: {\n\t\t\t\tinput: {\n\t\t\t\t\tclientMutationId: v4(),\n\t\t\t\t\tall: true\n\t\t\t\t}\n\t\t\t},\n\t\t} );\n\t}\n\n\treturn (\n\t\t<div className=\"cart product-cart-container container mx-auto my-32 px-4 xl:px-0\">\n\t\t</div>\n\t);\n};\n\nexport default CartItemsContainer;\n"]},"metadata":{},"sourceType":"module"}