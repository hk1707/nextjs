{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport matter from 'gray-matter';\nimport { parseISO, format } from 'date-fns';\nimport fs from 'fs';\nimport { join } from 'path'; // Add markdown files in `src/content/blog`\n\nconst postsDirectory = join(process.cwd(), 'src', 'content', 'blog');\nexport function getPostBySlug(slug) {\n  const realSlug = slug.replace(/\\.md$/, '');\n  const fullPath = join(postsDirectory, `${realSlug}.md`);\n  const fileContents = fs.readFileSync(fullPath, 'utf8');\n  const {\n    data,\n    content\n  } = matter(fileContents);\n  const date = format(parseISO(data.date), 'MMMM dd, yyyy');\n  return {\n    slug: realSlug,\n    frontmatter: _objectSpread(_objectSpread({}, data), {}, {\n      date\n    }),\n    content\n  };\n}\nexport function getAllPosts() {\n  const slugs = fs.readdirSync(postsDirectory);\n  const posts = slugs.map(slug => getPostBySlug(slug));\n  return posts;\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/lib/pageapi.js"],"names":["matter","parseISO","format","fs","join","postsDirectory","process","cwd","getPostBySlug","slug","realSlug","replace","fullPath","fileContents","readFileSync","data","content","date","frontmatter","getAllPosts","slugs","readdirSync","posts","map"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,UAAjC;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,IAAT,QAAqB,MAArB,C,CAEA;;AACA,MAAMC,cAAc,GAAGD,IAAI,CAACE,OAAO,CAACC,GAAR,EAAD,EAAgB,KAAhB,EAAuB,SAAvB,EAAkC,MAAlC,CAA3B;AAEA,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAClC,QAAMC,QAAQ,GAAGD,IAAI,CAACE,OAAL,CAAa,OAAb,EAAsB,EAAtB,CAAjB;AACA,QAAMC,QAAQ,GAAGR,IAAI,CAACC,cAAD,EAAkB,GAAEK,QAAS,KAA7B,CAArB;AACA,QAAMG,YAAY,GAAGV,EAAE,CAACW,YAAH,CAAgBF,QAAhB,EAA0B,MAA1B,CAArB;AACA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBhB,MAAM,CAACa,YAAD,CAAhC;AACA,QAAMI,IAAI,GAAGf,MAAM,CAACD,QAAQ,CAACc,IAAI,CAACE,IAAN,CAAT,EAAsB,eAAtB,CAAnB;AAEA,SAAO;AAAER,IAAAA,IAAI,EAAEC,QAAR;AAAkBQ,IAAAA,WAAW,kCAAOH,IAAP;AAAaE,MAAAA;AAAb,MAA7B;AAAkDD,IAAAA;AAAlD,GAAP;AACD;AAED,OAAO,SAASG,WAAT,GAAuB;AAC5B,QAAMC,KAAK,GAAGjB,EAAE,CAACkB,WAAH,CAAehB,cAAf,CAAd;AACA,QAAMiB,KAAK,GAAGF,KAAK,CAACG,GAAN,CAAWd,IAAD,IAAUD,aAAa,CAACC,IAAD,CAAjC,CAAd;AAEA,SAAOa,KAAP;AACD","sourcesContent":["import matter from 'gray-matter'\nimport { parseISO, format } from 'date-fns'\nimport fs from 'fs'\nimport { join } from 'path'\n\n// Add markdown files in `src/content/blog`\nconst postsDirectory = join(process.cwd(), 'src', 'content', 'blog')\n\nexport function getPostBySlug(slug) {\n  const realSlug = slug.replace(/\\.md$/, '')\n  const fullPath = join(postsDirectory, `${realSlug}.md`)\n  const fileContents = fs.readFileSync(fullPath, 'utf8')\n  const { data, content } = matter(fileContents)\n  const date = format(parseISO(data.date), 'MMMM dd, yyyy')\n\n  return { slug: realSlug, frontmatter: { ...data, date }, content }\n}\n\nexport function getAllPosts() {\n  const slugs = fs.readdirSync(postsDirectory)\n  const posts = slugs.map((slug) => getPostBySlug(slug))\n\n  return posts\n}"]},"metadata":{},"sourceType":"module"}