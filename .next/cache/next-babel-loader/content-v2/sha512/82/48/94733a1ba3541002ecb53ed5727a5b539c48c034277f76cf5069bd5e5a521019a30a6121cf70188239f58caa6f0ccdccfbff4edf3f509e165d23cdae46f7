{"ast":null,"code":"import _regeneratorRuntime from \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/pages/index.js\",\n    _this = this;\n\nimport Layout from \"../components/Layout\";\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css';\nimport Product from \"../components/products\";\nimport client from \"./../components/Apolloclient\";\nimport gql from \"graphql-tag\";\nimport PRODUCT_QUERY from \"../query/productquery\";\nimport POST_QUERY_ALL from \"../query/postQuety\";\nimport { MDBContainer } from 'mdb-react-ui-kit';\nimport { ApolloProvider } from '@apollo/client';\nimport GET_CART from \"../src/queries/get-cart\";\nimport Home from \"../components/home\";\nimport { getPreviewPost, getAllPostsWithSlug, PRODUCT_SLUGS, PRODUCT_BY_SLUG_QUERY, getPostAndMorePosts } from '../lib/pageapi';\nimport ReactDOM from 'react-dom';\n\nvar Index = function Index(props) {\n  var product = props.product,\n      post = props.post,\n      test = props.test;\n  var posts = post.data.posts.nodes;\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Home, {\n        slide: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 8\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 8\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, cart, test, allPosts;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return client.query({\n            query: PRODUCT_QUERY\n          });\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return client.query({\n            query: GET_CART\n          });\n\n        case 5:\n          cart = _context.sent;\n          _context.next = 8;\n          return getPostAndMorePosts('new');\n\n        case 8:\n          test = _context.sent;\n          _context.next = 11;\n          return client.query({\n            query: POST_QUERY_ALL\n          });\n\n        case 11:\n          allPosts = _context.sent;\n          return _context.abrupt(\"return\", {\n            product: res.data.products.nodes,\n            post: allPosts,\n            test: cart\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\nvar mystyle = {\n  display: \"flex\",\n  flexWrap: \"wrap\"\n};\nvar container = {\n  maxWidth: \"1200px\",\n  width: \"100%\",\n  margin: \"0 auto\",\n  marginTop: \"120px\",\n  marginBottom: \"60px\"\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/pages/index.js"],"names":["Layout","Product","client","gql","PRODUCT_QUERY","POST_QUERY_ALL","MDBContainer","ApolloProvider","GET_CART","Home","getPreviewPost","getAllPostsWithSlug","PRODUCT_SLUGS","PRODUCT_BY_SLUG_QUERY","getPostAndMorePosts","ReactDOM","Index","props","product","post","test","posts","data","nodes","getInitialProps","query","res","cart","allPosts","products","mystyle","display","flexWrap","container","maxWidth","width","margin","marginTop","marginBottom"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAO,uCAAP;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,SAASC,YAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,cAAT,EAAwBC,mBAAxB,EAA4CC,aAA5C,EAA0DC,qBAA1D,EAAiFC,mBAAjF,QAA4G,gBAA5G;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAEC,KAAF,EAAa;AAAA,MAEhBC,OAFgB,GAESD,KAFT,CAEhBC,OAFgB;AAAA,MAENC,IAFM,GAESF,KAFT,CAENE,IAFM;AAAA,MAECC,IAFD,GAESH,KAFT,CAECG,IAFD;AAGxB,MAAMC,KAAK,GAAGF,IAAI,CAACG,IAAL,CAAUD,KAAV,CAAgBE,KAA9B;AAEA,sBACC,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAErB,MAAxB;AAAA,2BAEG,QAAC,MAAD;AAAA,6BAEA,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEmB;AAAb;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAFH;AAAA;AAAA;AAAA;AAAA,WADD;AAyBF,CA9BD;;KAAML,K;AAgCNA,KAAK,CAACQ,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAGDtB,MAAM,CAACuB,KAAP,CAAa;AAACA,YAAAA,KAAK,EAACrB;AAAP,WAAb,CAHC;;AAAA;AAGbsB,UAAAA,GAHa;AAAA;AAAA,iBAKDxB,MAAM,CAACuB,KAAP,CAAa;AAACA,YAAAA,KAAK,EAACjB;AAAP,WAAb,CALC;;AAAA;AAKdmB,UAAAA,IALc;AAAA;AAAA,iBAMDb,mBAAmB,CAAC,KAAD,CANlB;;AAAA;AAMdM,UAAAA,IANc;AAAA;AAAA,iBAOGlB,MAAM,CAACuB,KAAP,CAAa;AAACA,YAAAA,KAAK,EAACpB;AAAP,WAAb,CAPH;;AAAA;AAOduB,UAAAA,QAPc;AAAA,2CASZ;AACHV,YAAAA,OAAO,EAACQ,GAAG,CAACJ,IAAJ,CAASO,QAAT,CAAkBN,KADvB;AAEHJ,YAAAA,IAAI,EAACS,QAFF;AAGHR,YAAAA,IAAI,EAACO;AAHF,WATY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAiBA,eAAeX,KAAf;AAEA,IAAMc,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAE,MADG;AAEZC,EAAAA,QAAQ,EAAE;AAFE,CAAhB;AAKE,IAAMC,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,QADM;AAEhBC,EAAAA,KAAK,EAAE,MAFS;AAGhBC,EAAAA,MAAM,EAAE,QAHQ;AAIhBC,EAAAA,SAAS,EAAE,OAJK;AAKhBC,EAAAA,YAAY,EAAE;AALE,CAAlB","sourcesContent":["import Layout from \"../components/Layout\";\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css'\nimport Product from \"../components/products\";\nimport client from \"./../components/Apolloclient\";\nimport gql from \"graphql-tag\";\nimport PRODUCT_QUERY from \"../query/productquery\";\nimport POST_QUERY_ALL from \"../query/postQuety\";\nimport { MDBContainer} from 'mdb-react-ui-kit';\nimport { ApolloProvider } from '@apollo/client';\nimport GET_CART from \"../src/queries/get-cart\";\nimport Home from \"../components/home\";\nimport { getPreviewPost,getAllPostsWithSlug,PRODUCT_SLUGS,PRODUCT_BY_SLUG_QUERY, getPostAndMorePosts } from '../lib/pageapi'\nimport ReactDOM from 'react-dom';\n\nconst Index = ( props ) => {\n   \n   const { product , post , test} = props;\n   const posts = post.data.posts.nodes;\n\n   return(\n    <ApolloProvider client={client}>\n       \n       <Layout >\n      \n       <Home slide={posts} /> \n       \n       {/* {  page.nodes.map(({ slug }) =>  <h1>{slug}</h1> ) } */}\n\n         {/* <div style={container} >           \n         <MDBContainer>\n         <h1 style={{textAlign:\"center\", paddingBottom:\"30px\"}}>Our Product</h1>\n         <div className=\"row row-cols-1 row-cols-md-4 g-4\">\n            { \n                product.map((items) => \n                    <Product key={items.id} product={items} />  \n                )\n            }\n            </div>\n            </MDBContainer>\n        </div> */}\n\n       </Layout>\n       </ApolloProvider>\n   );\n};\n\nIndex.getInitialProps = async() => {\n\n    // const res = await fatch( `${clientConfig.graphurl}/?${PRODUCT_QUERY}` );\n     const res = await client.query({query:PRODUCT_QUERY});\n    // const productdata = await res.json();\n    const cart = await client.query({query:GET_CART});\n    const test = await getPostAndMorePosts('new')\n    const allPosts = await client.query({query:POST_QUERY_ALL});\n\n     return {\n         product:res.data.products.nodes,\n         post:allPosts,\n         test:cart\n     }\n \n };\n\nexport default Index;\n\nconst mystyle = {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  };\n\n  const container = {\n    maxWidth: \"1200px\",\n    width: \"100%\",\n    margin: \"0 auto\",\n    marginTop: \"120px\",\n    marginBottom: \"60px\",\n  };"]},"metadata":{},"sourceType":"module"}