{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport remark from 'remark';\nimport html from 'remark-html';\nimport { getPostBySlug, getAllPosts } from '../lib/pageapi';\nexport async function getStaticProps({\n  params\n}) {\n  const post = getPostBySlug(params.slug);\n  const markdown = await remark().use(html).process(post.content || '');\n  const content = markdown.toString();\n  return {\n    props: _objectSpread(_objectSpread({}, post), {}, {\n      content\n    })\n  };\n}\nexport async function getStaticPaths() {\n  const posts = getAllPosts();\n  return {\n    paths: posts.map(post => {\n      return {\n        params: {\n          slug: post.slug\n        }\n      };\n    }),\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/pages/[slug].js"],"names":["remark","html","getPostBySlug","getAllPosts","getStaticProps","params","post","slug","markdown","use","process","content","toString","props","getStaticPaths","posts","paths","map","fallback"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,gBAA3C;AAEA,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC/C,QAAMC,IAAI,GAAGJ,aAAa,CAACG,MAAM,CAACE,IAAR,CAA1B;AACA,QAAMC,QAAQ,GAAG,MAAMR,MAAM,GAC1BS,GADoB,CAChBR,IADgB,EAEpBS,OAFoB,CAEZJ,IAAI,CAACK,OAAL,IAAgB,EAFJ,CAAvB;AAGA,QAAMA,OAAO,GAAGH,QAAQ,CAACI,QAAT,EAAhB;AAEA,SAAO;AACLC,IAAAA,KAAK,kCACAP,IADA;AAEHK,MAAAA;AAFG;AADA,GAAP;AAMD;AAED,OAAO,eAAeG,cAAf,GAAgC;AACrC,QAAMC,KAAK,GAAGZ,WAAW,EAAzB;AAEA,SAAO;AACLa,IAAAA,KAAK,EAAED,KAAK,CAACE,GAAN,CAAWX,IAAD,IAAU;AACzB,aAAO;AACLD,QAAAA,MAAM,EAAE;AACNE,UAAAA,IAAI,EAAED,IAAI,CAACC;AADL;AADH,OAAP;AAKD,KANM,CADF;AAQLW,IAAAA,QAAQ,EAAE;AARL,GAAP;AAUD","sourcesContent":["import remark from 'remark'\nimport html from 'remark-html'\nimport { getPostBySlug, getAllPosts } from '../lib/pageapi'\n\nexport async function getStaticProps({ params }) {\n  const post = getPostBySlug(params.slug)\n  const markdown = await remark()\n    .use(html)\n    .process(post.content || '')\n  const content = markdown.toString()\n\n  return {\n    props: {\n      ...post,\n      content,\n    },\n  }\n}\n\nexport async function getStaticPaths() {\n  const posts = getAllPosts()\n\n  return {\n    paths: posts.map((post) => {\n      return {\n        params: {\n          slug: post.slug,\n        },\n      }\n    }),\n    fallback: false,\n  }\n}"]},"metadata":{},"sourceType":"module"}