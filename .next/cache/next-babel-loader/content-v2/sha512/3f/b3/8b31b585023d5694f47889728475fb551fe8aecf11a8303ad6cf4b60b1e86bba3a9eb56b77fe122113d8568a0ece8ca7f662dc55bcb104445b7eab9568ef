{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/src/components/cart/AddToCartButton.js\";\nimport { useState, useContext } from \"react\";\nimport { ApolloProvider, gql, useQuery, useMutation } from '@apollo/client';\nimport { AppContext } from \"../context/AppContext\";\nimport { getFormattedCart, updateCart, addFirstProduct } from \"../../functions\";\nimport Link from \"next/link\"; //import gql from \"graphql-tag\";\n\nimport { v4 } from 'uuid'; //import GET_CART from \"../../queries/get-cart\";\n//import ADD_TO_CART from \"../../mutations/add-to-cart\";\n\nconst ADD_TO_CART = gql`\n  mutation ($input: AddToCartInput!) {\n    __typename\n  addToCart(input: $input) {\n    clientMutationId\n    cartItem {\n      key\n      product {\n        id\n        productId\n        name\n        description\n        type\n        onSale\n        slug\n        averageRating\n        reviewCount\n        image {\n          id\n          sourceUrl\n          altText\n        }\n        galleryImages {\n          nodes {\n            id\n            sourceUrl\n            altText\n          }\n        }\n      }\n      quantity\n      subtotal\n      subtotalTax\n      tax\n      total\n      variation{\n        id\n        variationId\n        name\n        description\n        type\n        onSale\n        price\n        regularPrice\n        salePrice\n        image{\n          id\n          sourceUrl\n          altText\n        }\n        attributes{\n          nodes{\n            id\n            attributeId\n            name\n            value\n          }\n        }\n      }\n    }\n  }\n  }\n`;\nconst GET_CART = gql`\n  query GET_CART {\n    cart {\n      contents {\n        nodes {\n          key\n          product {\n            id\n            productId\n            name\n            description\n            type\n            onSale\n            slug\n            averageRating\n            reviewCount\n            image {\n              id\n                sourceUrl\n                srcSet\n                altText\n                title       \n            }\n            galleryImages {\n              nodes {\n                id\n                sourceUrl\n                srcSet\n                altText\n                title   \n              }\n            }\n\n          }\n          variation {\n            id\n            variationId\n            name\n            description\n            type\n            onSale\n            price\n            regularPrice\n            salePrice\n            image {\n              id\n              sourceUrl\n              srcSet\n              altText\n              title      \n            }\n            attributes {\n              nodes {\n                id\n                name\n                value\n              }\n            }\n          }\n          quantity\n          total\n          subtotal\n          subtotalTax\n        }\n      }\n      appliedCoupons {\n        nodes {\n          id\n          couponId\n          discountType\n          amount\n          dateExpiry\n          products {\n            nodes {\n              id\n            }\n          }\n          productCategories {\n            nodes {\n              id\n            }\n          }\n        }\n      }\n      subtotal\n      subtotalTax\n      shippingTax\n      shippingTotal\n      total\n      totalTax\n      feeTax\n      feeTotal\n      discountTax\n      discountTotal\n    }\n  }\n`;\n\nconst AddToCart = props => {\n  const {\n    product\n  } = props;\n  const productQryInput = {\n    clientMutationId: v4(),\n    // Generate a unique id.\n    productId: product.productId\n  };\n  const {\n    0: cart,\n    1: setCart\n  } = useContext(AppContext);\n  const {\n    0: showViewCart,\n    1: setShowViewCart\n  } = useState(false);\n  const {\n    0: requestError,\n    1: setRequestError\n  } = useState(null);\n  /**\n   * @TODO will update this in future, when required.\n   * Handles adding items to the cart.\n   *\n   * @return {void}\n   */\n\n  const handleAddToCartLocalStorage = () => {\n    // If component is rendered client side.\n    if (false) {\n      let existingCart = localStorage.getItem('woo-next-cart'); // If cart has item(s) already, update existing or add new item.\n\n      if (!existingCart) {\n        existingCart = JSON.parse(existingCart);\n        const qtyToBeAdded = 1;\n        const updatedCart = updateCart(existingCart, product, qtyToBeAdded);\n        setCart(updatedCart);\n      } else {\n        /**\n         * If No Items in the cart, create an empty array and add one.\n         * @type {Array}\n         */\n        const newCart = addFirstProduct(product);\n        setCart(newCart);\n      } // Show View Cart Button\n\n\n      setShowViewCart(true);\n    }\n  }; // Get Cart Data.\n\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_CART);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  console.log(data); // const { loading, error, data, refetch } = useQuery( GET_CART, {\n  // \tnotifyOnNetworkStatusChange: true,\n  // \tonCompleted: () => {\n  // \t\t//console.warn( 'completed GET_CART' );\n  // \t\tconsole.log(loading)\n  // \t\t// Update cart in the localStorage.\n  // \t\tconst updatedCart = getFormattedCart( data );\n  // \t\tlocalStorage.setItem( 'woo-next-cart', JSON.stringify( updatedCart ) );\n  // \t\t// Update cart data in React Context.\n  // \t\tsetCart( updatedCart );\n  // \t}\n  // } );\n  // Add to Cart Mutation.\n\n  const [addToCart, {\n    data: addToCartRes,\n    loading: addToCartLoading,\n    error: addToCartError\n  }] = useMutation(ADD_TO_CART, {\n    variables: {\n      input: productQryInput\n    },\n    onCompleted: () => {\n      // console.warn( 'completed ADD_TO_CART' );\n      // If error.\n      if (addToCartError) {\n        setRequestError(addToCartError.graphQLErrors[0].message);\n      } // On Success:\n      // 1. Make the GET_CART query to update the cart with new values in React context.\n\n\n      refetch(); // 2. Show View Cart Button\n\n      setShowViewCart(true);\n    },\n    onError: error => {\n      if (error) {\n        setRequestError(error.graphQLErrors[0].message);\n      }\n    }\n  });\n\n  const handleAddToCartClick = () => {\n    //handleAddToCartLocalStorage();\n    setRequestError(null);\n    addToCart();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [addToCartLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Adding to Cart...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 25\n    }, this), \"ExternalProduct\" === product.__typename ? /*#__PURE__*/_jsxDEV(\"a\", {\n      href: product.externalUrl,\n      target: \"_blank\",\n      className: \"px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\",\n      children: \"Buy now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 6\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddToCartClick,\n      className: \"px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current hover:bg-purple-600 hover:text-white hover:border-purple-600\",\n      children: \"Add to cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 5\n    }, this), showViewCart ? /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/cart\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-3 py-1 rounded-sm text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\",\n        children: \"View Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 5\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 3\n  }, this);\n};\n\nexport default AddToCart;","map":{"version":3,"sources":["/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/src/components/cart/AddToCartButton.js"],"names":["useState","useContext","ApolloProvider","gql","useQuery","useMutation","AppContext","getFormattedCart","updateCart","addFirstProduct","Link","v4","ADD_TO_CART","GET_CART","AddToCart","props","product","productQryInput","clientMutationId","productId","cart","setCart","showViewCart","setShowViewCart","requestError","setRequestError","handleAddToCartLocalStorage","existingCart","localStorage","getItem","JSON","parse","qtyToBeAdded","updatedCart","newCart","loading","error","data","message","console","log","addToCart","addToCartRes","addToCartLoading","addToCartError","variables","input","onCompleted","graphQLErrors","refetch","onError","handleAddToCartClick","__typename","externalUrl"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAAQC,cAAR,EAAwBC,GAAxB,EAA8BC,QAA9B,EAAwCC,WAAxC,QAA2D,gBAA3D;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,gBAAT,EAA4BC,UAA5B,EAAyCC,eAAzC,QAAiE,iBAAjE;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AACA,SAASC,EAAT,QAAmB,MAAnB,C,CACA;AACA;;AAGA,MAAMC,WAAW,GAAGT,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA9DA;AAgEA,MAAMU,QAAQ,GAAGV,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhGA;;AAmGA,MAAMW,SAAS,GAAKC,KAAF,IAAa;AAE9B,QAAM;AAAEC,IAAAA;AAAF,MAAcD,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","sourcesContent":["import { useState, useContext } from \"react\";\nimport {ApolloProvider, gql , useQuery, useMutation } from '@apollo/client';\nimport { AppContext } from \"../context/AppContext\";\nimport { getFormattedCart , updateCart , addFirstProduct  } from \"../../functions\";\nimport Link from \"next/link\";\n//import gql from \"graphql-tag\";\nimport { v4 } from 'uuid';\n//import GET_CART from \"../../queries/get-cart\";\n//import ADD_TO_CART from \"../../mutations/add-to-cart\";\n\n\nconst ADD_TO_CART = gql`\n  mutation ($input: AddToCartInput!) {\n    __typename\n  addToCart(input: $input) {\n    clientMutationId\n    cartItem {\n      key\n      product {\n        id\n        productId\n        name\n        description\n        type\n        onSale\n        slug\n        averageRating\n        reviewCount\n        image {\n          id\n          sourceUrl\n          altText\n        }\n        galleryImages {\n          nodes {\n            id\n            sourceUrl\n            altText\n          }\n        }\n      }\n      quantity\n      subtotal\n      subtotalTax\n      tax\n      total\n      variation{\n        id\n        variationId\n        name\n        description\n        type\n        onSale\n        price\n        regularPrice\n        salePrice\n        image{\n          id\n          sourceUrl\n          altText\n        }\n        attributes{\n          nodes{\n            id\n            attributeId\n            name\n            value\n          }\n        }\n      }\n    }\n  }\n  }\n`;\n\nconst GET_CART = gql`\n  query GET_CART {\n    cart {\n      contents {\n        nodes {\n          key\n          product {\n            id\n            productId\n            name\n            description\n            type\n            onSale\n            slug\n            averageRating\n            reviewCount\n            image {\n              id\n                sourceUrl\n                srcSet\n                altText\n                title       \n            }\n            galleryImages {\n              nodes {\n                id\n                sourceUrl\n                srcSet\n                altText\n                title   \n              }\n            }\n\n          }\n          variation {\n            id\n            variationId\n            name\n            description\n            type\n            onSale\n            price\n            regularPrice\n            salePrice\n            image {\n              id\n              sourceUrl\n              srcSet\n              altText\n              title      \n            }\n            attributes {\n              nodes {\n                id\n                name\n                value\n              }\n            }\n          }\n          quantity\n          total\n          subtotal\n          subtotalTax\n        }\n      }\n      appliedCoupons {\n        nodes {\n          id\n          couponId\n          discountType\n          amount\n          dateExpiry\n          products {\n            nodes {\n              id\n            }\n          }\n          productCategories {\n            nodes {\n              id\n            }\n          }\n        }\n      }\n      subtotal\n      subtotalTax\n      shippingTax\n      shippingTotal\n      total\n      totalTax\n      feeTax\n      feeTotal\n      discountTax\n      discountTotal\n    }\n  }\n`;\n\n\nconst AddToCart = ( props ) => {\n\n\tconst { product } = props;\n\n\tconst productQryInput = {\n\t\tclientMutationId: v4(), // Generate a unique id.\n\t\tproductId: product.productId,\n\t};\n\n\tconst [ cart, setCart ] = useContext( AppContext );\n\tconst [ showViewCart, setShowViewCart ] = useState( false );\n\tconst [ requestError, setRequestError ] = useState( null );\n\n\t/**\n\t * @TODO will update this in future, when required.\n\t * Handles adding items to the cart.\n\t *\n\t * @return {void}\n\t */\n\tconst handleAddToCartLocalStorage = () => {\n\t\n\t\t// If component is rendered client side.\n\t\tif ( process.browser ) {\n\t\n\t\t\tlet existingCart = localStorage.getItem( 'woo-next-cart' );\n\t\n\n\t\t\t// If cart has item(s) already, update existing or add new item.\n\t\t\tif ( ! existingCart ) {\n\t\n\t\t\t\texistingCart = JSON.parse( existingCart );\n\t\n\t\t\t\tconst qtyToBeAdded = 1;\n\t\n\t\t\t\tconst updatedCart = updateCart( existingCart, product, qtyToBeAdded );\n\t\n\t\t\t\tsetCart( updatedCart );\n\t\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * If No Items in the cart, create an empty array and add one.\n\t\t\t\t * @type {Array}\n\t\t\t\t */\n\t\t\t\tconst newCart = addFirstProduct( product );\n\t\t\t\tsetCart( newCart );\n\t\t\t}\n\t\n\t\t\t// Show View Cart Button\n\t\t\tsetShowViewCart( true )\n\t\t}\n\t};\n\n\t// Get Cart Data.\n\n\tconst { loading, error, data } = useQuery(GET_CART);\n\n\tif (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\tconsole.log(data);\n\n\t// const { loading, error, data, refetch } = useQuery( GET_CART, {\n\t// \tnotifyOnNetworkStatusChange: true,\n\t// \tonCompleted: () => {\n\t\t\t\n\t// \t\t//console.warn( 'completed GET_CART' );\n\t// \t\tconsole.log(loading)\n\t\t\t\n\t// \t\t// Update cart in the localStorage.\n\t// \t\tconst updatedCart = getFormattedCart( data );\n\t// \t\tlocalStorage.setItem( 'woo-next-cart', JSON.stringify( updatedCart ) );\n\t\t\t\n\t// \t\t// Update cart data in React Context.\n\t// \t\tsetCart( updatedCart );\n\t// \t}\n\t// } );\n\n\t// Add to Cart Mutation.\n\tconst [ addToCart, { data: addToCartRes, loading: addToCartLoading, error: addToCartError }] = useMutation( ADD_TO_CART, {\n\t\tvariables: {\n\t\t\tinput: productQryInput,\n\t\t},\n\t\n\t\tonCompleted: () => {\n\t\t\t// console.warn( 'completed ADD_TO_CART' );\n\n\t\t\t// If error.\n\t\t\tif ( addToCartError ) {\n\t\t\t\tsetRequestError( addToCartError.graphQLErrors[0].message );\n\t\t\t}\n\n\t\t\t// On Success:\n\t\t\t// 1. Make the GET_CART query to update the cart with new values in React context.\n\t\t\trefetch();\n\n\t\t\t// 2. Show View Cart Button\n\t\t\tsetShowViewCart( true )\n\t\t\t\n\t\t},\n\t\tonError: ( error ) => {\n\t\t\tif ( error ) {\n\t\t\t\tsetRequestError( error.graphQLErrors[ 0 ].message );\n\t\t\t}\n\t\t}\n\t} );\n\n\tconst handleAddToCartClick = () => {\n\t    //handleAddToCartLocalStorage();\n\t\tsetRequestError( null );\n\t\taddToCart();\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{/* Add To Cart Loading*/}\n\t\t\t{addToCartLoading && <p>Adding to Cart...</p>}\n\n\t\t\t{/*\tCheck if its an external product then put its external buy link */}\n\t\t\t{ \"ExternalProduct\" === product.__typename ? (\n\t\t\t\t\t<a href={ product.externalUrl } target=\"_blank\" className=\"px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\">Buy now</a>\n\t\t\t\t) :\n\t\t\t\t<button onClick={ handleAddToCartClick } className=\"px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current hover:bg-purple-600 hover:text-white hover:border-purple-600\">Add to cart</button>\n\t\t\t}\n\t\t\t{ showViewCart ? (\n\t\t\t\t<Link href=\"/cart\"><button className=\"px-3 py-1 rounded-sm text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\">View Cart</button></Link>\n\t\t\t) : '' }\n\t\t</div>\n\t);\n};\n\nexport default AddToCart;\n"]},"metadata":{},"sourceType":"module"}