{"ast":null,"code":"import _regeneratorRuntime from \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/pages/index.js\",\n    _this = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"query{\\n    products(first: 20) {\\n        nodes {\\n          id\\n          productId\\n          averageRating\\n          slug\\n          description\\n          image {\\n            uri\\n            title\\n            srcSet\\n            sourceUrl\\n          }\\n          name\\n          ... on VariableProduct {\\n            id\\n            name\\n            price\\n            productId\\n            regularPrice\\n            image{\\n              id\\n              title\\n              altText\\n              uri\\n              sourceUrl\\n              srcSet\\n            }\\n          }\\n          ... on SimpleProduct {\\n            id\\n            name\\n            averageRating\\n            price\\n            productId\\n            image {\\n              id\\n              title\\n              altText\\n              uri\\n              sourceUrl\\n              srcSet          \\n            }\\n          }\\n        }\\n      }\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Layout from \"../components/Layout\";\nimport fatch from \"isomorphic-unfetch\";\nimport clientConfig from '../clientConfig';\nimport Product from \"../components/products\";\nimport client from \"./../components/Apolloclient\";\nimport gql from \"graphql-tag\";\nvar PRODUCT_QUERY = gql(_templateObject());\n\nvar Index = function Index(props) {\n  //console.warn( client );\n  var product = props.product;\n  console.log(product);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row-cols-1 row-cols-md-3 g-4\",\n        children: product.map(function (items) {\n          return ec;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 10\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 8\n  }, _this);\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return client.query({\n            query: PRODUCT_QUERY\n          });\n\n        case 2:\n          res = _context.sent;\n          return _context.abrupt(\"return\", {\n            product: res.data.products.nodes\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\nvar mystyle = {\n  display: \"flex\",\n  flexWrap: \"wrap\"\n};\nvar container = {\n  maxWidth: \"1200px\",\n  width: \"100%\",\n  margin: \"0 auto\",\n  marginTop: \"60px\",\n  marginBottom: \"60px\"\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/pages/index.js"],"names":["Layout","fatch","clientConfig","Product","client","gql","PRODUCT_QUERY","Index","props","product","console","log","container","map","items","ec","getInitialProps","query","res","data","products","nodes","mystyle","display","flexWrap","maxWidth","width","margin","marginTop","marginBottom"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,aAAa,GAAGD,GAAH,mBAAnB;;AAiDA,IAAME,KAAK,GAAG,SAARA,KAAQ,CAAEC,KAAF,EAAa;AACxB;AADwB,MAEhBC,OAFgB,GAEJD,KAFI,CAEhBC,OAFgB;AAGxBC,EAAAA,OAAO,CAACC,GAAR,CAAaF,OAAb;AAEA,sBACI,QAAC,MAAD;AAAA,2BACE;AAAK,MAAA,KAAK,EAAEG,SAAZ;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA,kBAEOH,OAAO,CAACI,GAAR,CAAY,UAACC,KAAD;AAAA,iBACRC,EADQ;AAAA,SAAZ;AAFP;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADJ;AAaF,CAlBD;;KAAMR,K;AAoBNA,KAAK,CAACS,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAGDZ,MAAM,CAACa,KAAP,CAAa;AAACA,YAAAA,KAAK,EAACX;AAAP,WAAb,CAHC;;AAAA;AAGbY,UAAAA,GAHa;AAAA,2CAMZ;AACHT,YAAAA,OAAO,EAACS,GAAG,CAACC,IAAJ,CAASC,QAAT,CAAkBC;AADvB,WANY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAaA,eAAed,KAAf;AAEA,IAAMe,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAE,MADG;AAEZC,EAAAA,QAAQ,EAAE;AAFE,CAAhB;AAKE,IAAMZ,SAAS,GAAG;AAChBa,EAAAA,QAAQ,EAAE,QADM;AAEhBC,EAAAA,KAAK,EAAE,MAFS;AAGhBC,EAAAA,MAAM,EAAE,QAHQ;AAIhBC,EAAAA,SAAS,EAAE,MAJK;AAKhBC,EAAAA,YAAY,EAAE;AALE,CAAlB","sourcesContent":["import Layout from \"../components/Layout\";\nimport fatch from \"isomorphic-unfetch\";\nimport clientConfig from '../clientConfig' ;\nimport Product from \"../components/products\";\nimport client from \"./../components/Apolloclient\";\nimport gql from \"graphql-tag\";\n\nconst PRODUCT_QUERY = gql`query{\n    products(first: 20) {\n        nodes {\n          id\n          productId\n          averageRating\n          slug\n          description\n          image {\n            uri\n            title\n            srcSet\n            sourceUrl\n          }\n          name\n          ... on VariableProduct {\n            id\n            name\n            price\n            productId\n            regularPrice\n            image{\n              id\n              title\n              altText\n              uri\n              sourceUrl\n              srcSet\n            }\n          }\n          ... on SimpleProduct {\n            id\n            name\n            averageRating\n            price\n            productId\n            image {\n              id\n              title\n              altText\n              uri\n              sourceUrl\n              srcSet          \n            }\n          }\n        }\n      }\n}`;\n\nconst Index = ( props ) => {\n   //console.warn( client );\n   const { product } = props;\n   console.log( product );\n\n   return(\n       <Layout >\n         <div style={container} >\n         <div className=\"row row-cols-1 row-cols-md-3 g-4\">\n            { \n                product.map((items) => \n                    ec  \n                )\n            }\n            </div>\n        </div>\n       </Layout>\n   );\n};\n\nIndex.getInitialProps = async() => {\n\n    // const res = await fatch( `${clientConfig.graphurl}/?${PRODUCT_QUERY}` );\n     const res = await client.query({query:PRODUCT_QUERY});\n    // const productdata = await res.json();\n     \n     return {\n         product:res.data.products.nodes\n     }\n \n };\n\n\nexport default Index;\n\nconst mystyle = {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  };\n\n  const container = {\n    maxWidth: \"1200px\",\n    width: \"100%\",\n    margin: \"0 auto\",\n    marginTop: \"60px\",\n    marginBottom: \"60px\",\n  };"]},"metadata":{},"sourceType":"module"}