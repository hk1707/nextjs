{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useContext, useEffect } from 'react';\nimport Billing from \"./Billing\";\nimport YourOrder from \"./YourOrder\";\nimport PaymentModes from \"./PaymentModes\";\nimport { AppContext } from \"../context/AppContext\";\nimport validateAndSanitizeCheckoutForm from '../../validator/checkout';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { getFormattedCart, createCheckoutData } from \"../../functions\";\nimport OrderSuccess from \"./OrderSuccess\";\nimport GET_CART from \"../../queries/get-cart\";\nimport CHECKOUT_MUTATION from \"../../mutations/checkout\";\n\nconst CheckoutForm = () => {\n  const initialState = {\n    firstName: '',\n    lastName: '',\n    company: '',\n    country: '',\n    address1: '',\n    address2: '',\n    city: '',\n    state: '',\n    postcode: '',\n    phone: '',\n    email: '',\n    createAccount: false,\n    orderNotes: '',\n    paymentMethod: '',\n    errors: null\n  }; // Use this for testing purposes, so you dont have to fill the checkout form over an over again.\n  // const initialState = {\n  // \tfirstName: 'Imran',\n  // \tlastName: 'Sayed',\n  // \taddress1: '109 Hills Road Valley',\n  // \taddress2: 'Station Road',\n  // \tcity: 'Pune',\n  // \tstate: 'Maharastra',\n  // \tcountry: 'ID',\n  // \tpostcode: '400298',\n  // \tphone: '9959338989',\n  // \temail: 'imran@gmail.com',\n  // \tcompany: 'Tech',\n  // \tcreateAccount: false,\n  // \torderNotes: '',\n  // \tpaymentMethod: 'cod',\n  // \terrors: null\n  // };\n\n  const {\n    0: cart,\n    1: setCart\n  } = useContext(AppContext);\n  const {\n    0: input,\n    1: setInput\n  } = useState(initialState);\n  const {\n    0: orderData,\n    1: setOrderData\n  } = useState(null);\n  const {\n    0: requestError,\n    1: setRequestError\n  } = useState(null); // Get Cart Data.\n\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(GET_CART, {\n    notifyOnNetworkStatusChange: true,\n    onCompleted: () => {\n      // console.warn( 'completed GET_CART' );\n      // Update cart in the localStorage.\n      const updatedCart = getFormattedCart(data);\n      localStorage.setItem('woo-next-cart', JSON.stringify(updatedCart)); // Update cart data in React Context.\n\n      setCart(updatedCart);\n    }\n  }); // Checkout or CreateOrder Mutation.\n\n  const [checkout, {\n    data: checkoutResponse,\n    loading: checkoutLoading,\n    error: checkoutError\n  }] = useMutation(CHECKOUT_MUTATION, {\n    variables: {\n      input: orderData\n    },\n    onCompleted: () => {\n      console.warn('completed CHECKOUT_MUTATION');\n      refetch();\n    },\n    onError: error => {\n      if (error) {\n        setRequestError(error.graphQLErrors[0].message);\n      }\n    }\n  });\n  /*\n   * Handle form submit.\n   *\n   * @param {Object} event Event Object.\n   *\n   * @return {void}\n   */\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const result = validateAndSanitizeCheckoutForm(input);\n\n    if (!result.isValid) {\n      setInput(_objectSpread(_objectSpread({}, input), {}, {\n        errors: result.errors\n      }));\n      return;\n    }\n\n    const checkOutData = createCheckoutData(input);\n    setOrderData(checkOutData);\n    setRequestError(null);\n  };\n  /*\n   * Handle onchange input.\n   *\n   * @param {Object} event Event Object.\n   *\n   * @return {void}\n   */\n\n\n  const handleOnChange = event => {\n    if ('createAccount' === event.target.name) {\n      const newState = _objectSpread(_objectSpread({}, input), {}, {\n        [event.target.name]: !input.createAccount\n      });\n\n      setInput(newState);\n    } else {\n      const newState = _objectSpread(_objectSpread({}, input), {}, {\n        [event.target.name]: event.target.value\n      });\n\n      setInput(newState);\n    }\n  };\n\n  useEffect(() => {\n    if (null !== orderData) {\n      // Call the checkout mutation when the value for orderData changes/updates.\n      checkout();\n    }\n  }, [orderData]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [cart ? /*#__PURE__*/_jsx(\"form\", {\n      onSubmit: handleFormSubmit,\n      className: \"woo-next-checkout-form\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-20\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"billing-details\",\n          children: [/*#__PURE__*/_jsx(\"h2\", {\n            className: \"text-xl font-medium mb-4\",\n            children: \"Billing Details\"\n          }), /*#__PURE__*/_jsx(Billing, {\n            input: input,\n            handleOnChange: handleOnChange\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"your-orders\",\n          children: [/*#__PURE__*/_jsx(\"h2\", {\n            className: \"text-xl font-medium mb-4\",\n            children: \"Your Order\"\n          }), /*#__PURE__*/_jsx(YourOrder, {\n            cart: cart\n          }), /*#__PURE__*/_jsx(PaymentModes, {\n            input: input,\n            handleOnChange: handleOnChange\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"woo-next-place-order-btn-wrap mt-5\",\n            children: /*#__PURE__*/_jsx(\"button\", {\n              className: \"bg-purple-600 text-white px-5 py-3 rounded-sm w-auto xl:w-full\",\n              type: \"submit\",\n              children: \"Place Order\"\n            })\n          }), checkoutLoading && /*#__PURE__*/_jsx(\"p\", {\n            children: \"Processing Order...\"\n          }), requestError && /*#__PURE__*/_jsxs(\"p\", {\n            children: [\"Error : \", requestError, \" :( Please try again\"]\n          })]\n        })]\n      })\n    }) : '', /*#__PURE__*/_jsx(OrderSuccess, {\n      response: checkoutResponse\n    })]\n  });\n};\n\nexport default CheckoutForm;","map":null,"metadata":{},"sourceType":"module"}