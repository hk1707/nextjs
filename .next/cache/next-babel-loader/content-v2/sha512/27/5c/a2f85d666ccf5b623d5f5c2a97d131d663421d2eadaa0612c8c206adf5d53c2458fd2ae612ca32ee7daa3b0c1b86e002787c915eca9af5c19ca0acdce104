{"ast":null,"code":"import _regeneratorRuntime from \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport clientConfig from './clientConfig';\n\nvar themeSetting = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fatch(\"\".concat(clientConfig.siteuri, \"/theme\")).then(function (response) {\n              return response.json();\n            }).then(function (repos) {\n              response.json(repos);\n            });\n            return _context.abrupt(\"return\", {\n              setting: allSetting\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function themeSetting() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default themeSetting;","map":{"version":3,"sources":["/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/theme-setting.js"],"names":["clientConfig","themeSetting","fatch","siteuri","then","response","json","repos","setting","allSetting"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,gBAAzB;;AAEA,IAAMC,YAAY;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAEjBC,YAAAA,KAAK,WAAKF,YAAY,CAACG,OAAlB,YAAL,CACCC,IADD,CACM,UAAAC,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,aADd,EAECF,IAFD,CAEM,UAACG,KAAD,EAAW;AACbF,cAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd;AACH,aAJD;AAFiB,6CAQV;AACHC,cAAAA,OAAO,EAACC;AADL,aARU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZR,YAAY;AAAA;AAAA;AAAA,GAAlB;;AAcA,eAAeA,YAAf","sourcesContent":["import clientConfig from './clientConfig' ;\n\nconst themeSetting = async() => {\n\n    fatch( `${clientConfig.siteuri}/theme` )\n    .then(response => response.json())\n    .then((repos) => {\n        response.json(repos);\n    });\n    \n    return {\n        setting:allSetting\n    }\n\n};\n\nexport default themeSetting;"]},"metadata":{},"sourceType":"module"}