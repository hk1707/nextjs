{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/pages/index.js\";\nimport Layout from \"../components/Layout\";\nimport fatch from \"isomorphic-unfetch\"; //import client from \"./../components/Apolloclient\";\n//import clientConfig from '../clientConfig' ;\n\nimport Product from \"../components/products\";\nimport gql from \"graphql-tag\";\nimport client from \"../components/Apolloclient\";\nconst PRODUCT_QUERY = gql`\n        query TestQuery {\n        launch(id: 56) {\n            id\n            mission {\n            name\n            }\n        }\n        }`;\n\nconst Index = props => {\n  console.warn(props);\n  const {\n    product\n  } = props; //console.log( product );\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row-cols-1 row-cols-md-3 g-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 8\n  }, this);\n};\n\nIndex.getInitialProps = async () => {\n  const result = await client.query({\n    query: PRODUCT_QUERY\n  });\n  return {\n    products: result.data.products.nodes\n  };\n};\n\nexport default Index;\nconst mystyle = {\n  display: \"flex\",\n  flexWrap: \"wrap\"\n};\nconst container = {\n  maxWidth: \"1200px\",\n  width: \"100%\",\n  margin: \"0 auto\",\n  marginTop: \"60px\",\n  marginBottom: \"60px\"\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/pages/index.js"],"names":["Layout","fatch","Product","gql","client","PRODUCT_QUERY","Index","props","console","warn","product","container","getInitialProps","result","query","products","data","nodes","mystyle","display","flexWrap","maxWidth","width","margin","marginTop","marginBottom"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;AACA;;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AAGA,MAAMC,aAAa,GAAGF,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UARA;;AAUA,MAAMG,KAAK,GAAKC,KAAF,IAAa;AACxBC,EAAAA,OAAO,CAACC,IAAR,CAAcF,KAAd;AACD,QAAM;AAAEG,IAAAA;AAAF,MAAcH,KAApB,CAFyB,CAIzB;;AAEC,sBACI,QAAC,MAAD;AAAA,2BACE;AAAK,MAAA,KAAK,EAAEI,SAAZ;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AASF,CAfD;;AAiBAL,KAAK,CAACM,eAAN,GAAwB,YAAW;AAE/B,QAAMC,MAAM,GAAG,MAAMT,MAAM,CAACU,KAAP,CAAc;AAAEA,IAAAA,KAAK,EAACT;AAAR,GAAd,CAArB;AAEA,SAAO;AACHU,IAAAA,QAAQ,EAAEF,MAAM,CAACG,IAAP,CAAYD,QAAZ,CAAqBE;AAD5B,GAAP;AAIH,CARD;;AAWA,eAAeX,KAAf;AAEA,MAAMY,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAE,MADG;AAEZC,EAAAA,QAAQ,EAAE;AAFE,CAAhB;AAKE,MAAMT,SAAS,GAAG;AAChBU,EAAAA,QAAQ,EAAE,QADM;AAEhBC,EAAAA,KAAK,EAAE,MAFS;AAGhBC,EAAAA,MAAM,EAAE,QAHQ;AAIhBC,EAAAA,SAAS,EAAE,MAJK;AAKhBC,EAAAA,YAAY,EAAE;AALE,CAAlB","sourcesContent":["import Layout from \"../components/Layout\";\nimport fatch from \"isomorphic-unfetch\";\n//import client from \"./../components/Apolloclient\";\n//import clientConfig from '../clientConfig' ;\nimport Product from \"../components/products\";\nimport gql from \"graphql-tag\";\nimport client from \"../components/Apolloclient\";\n\n\nconst PRODUCT_QUERY = gql`\n        query TestQuery {\n        launch(id: 56) {\n            id\n            mission {\n            name\n            }\n        }\n        }`;\n\nconst Index = ( props ) => {\n   console.warn( props );\n  const { product } = props;\n\n  //console.log( product );\n\n   return(\n       <Layout >\n         <div style={container} >\n         <div className=\"row row-cols-1 row-cols-md-3 g-4\">\n            \n            </div>\n        </div>\n       </Layout>\n   );\n};\n\nIndex.getInitialProps = async() => {\n\n    const result = await client.query( { query:PRODUCT_QUERY } );\n\n    return {\n        products: result.data.products.nodes\n    }\n\n};\n\n\nexport default Index;\n\nconst mystyle = {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  };\n\n  const container = {\n    maxWidth: \"1200px\",\n    width: \"100%\",\n    margin: \"0 auto\",\n    marginTop: \"60px\",\n    marginBottom: \"60px\",\n  };"]},"metadata":{},"sourceType":"module"}