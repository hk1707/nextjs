{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/src/components/cart/AddToCartButton.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport { ApolloProvider, gql, useQuery, useMutation } from '@apollo/client';\nimport { AppContext } from \"../context/AppContext\";\nimport { getFormattedCart, updateCart, addFirstProduct } from \"../../functions\";\nimport Link from \"next/link\";\nimport client from \"../../../components/Apolloclient\"; //import gql from \"graphql-tag\";\n\nimport { v4 } from 'uuid';\nimport GET_CART from \"../../queries/get-cart\";\nimport ADD_TO_CART from \"../../mutations/add-to-cart\";\n\nvar AddToCart = function AddToCart(props) {\n  _s();\n\n  var product = props.product;\n  var productQryInput = {\n    clientMutationId: v4(),\n    // Generate a unique id.\n    productId: product.productId\n  };\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext[0],\n      setCart = _useContext[1];\n\n  var _useState = useState(false),\n      showViewCart = _useState[0],\n      setShowViewCart = _useState[1];\n\n  var _useState2 = useState(null),\n      requestError = _useState2[0],\n      setRequestError = _useState2[1];\n  /**\n   * @TODO will update this in future, when required.\n   * Handles adding items to the cart.\n   *\n   * @return {void}\n   */\n\n\n  var handleAddToCartLocalStorage = function handleAddToCartLocalStorage() {\n    // If component is rendered client side.\n    if (true) {\n      var existingCart = localStorage.getItem('woo-next-cart'); // If cart has item(s) already, update existing or add new item.\n\n      if (!existingCart) {\n        existingCart = JSON.parse(existingCart);\n        var qtyToBeAdded = 1;\n        var updatedCart = updateCart(existingCart, product, qtyToBeAdded);\n        setCart(updatedCart);\n      } else {\n        /**\n         * If No Items in the cart, create an empty array and add one.\n         * @type {Array}\n         */\n        var newCart = addFirstProduct(product);\n        setCart(newCart);\n      } // Show View Cart Button\n\n\n      setShowViewCart(true);\n    }\n  }; // Get Cart Data.\n\n\n  var _useQuery = useQuery(GET_CART, {\n    notifyOnNetworkStatusChange: true,\n    onCompleted: function onCompleted() {\n      //console.warn( 'completed GET_CART' );\t\t\n      // Update cart in the localStorage.\n      var updatedCart = getFormattedCart(data);\n      localStorage.setItem('woo-next-cart', JSON.stringify(updatedCart)); // Update cart data in React Context.\n\n      setCart(updatedCart);\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      refetch = _useQuery.refetch; // Add to Cart Mutation.\n\n\n  var _useMutation = useMutation(ADD_TO_CART, {\n    variables: {\n      input: productQryInput\n    },\n    onCompleted: function onCompleted() {\n      // console.warn( 'completed ADD_TO_CART' );\n      // If error.\n      if (addToCartError) {\n        setRequestError(addToCartError.graphQLErrors[0].message);\n      } // On Success:\n      // 1. Make the GET_CART query to update the cart with new values in React context.\n\n\n      refetch(); // 2. Show View Cart Button\n\n      setShowViewCart(true);\n    },\n    onError: function onError(error) {\n      if (error) {\n        setRequestError(error.graphQLErrors[0].message);\n      }\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addToCart = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      addToCartRes = _useMutation2$.data,\n      addToCartLoading = _useMutation2$.loading,\n      addToCartError = _useMutation2$.error;\n\n  var handleAddToCartClick = function handleAddToCartClick() {\n    //handleAddToCartLocalStorage();\n    setRequestError(null);\n    addToCart();\n  };\n\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [addToCartLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Adding to Cart...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }, _this), \"ExternalProduct\" === product.__typename ? /*#__PURE__*/_jsxDEV(\"a\", {\n        href: product.externalUrl,\n        target: \"_blank\",\n        className: \"px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\",\n        children: \"Buy now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 6\n      }, _this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddToCartClick,\n        className: \"px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current hover:bg-purple-600 hover:text-white hover:border-purple-600\",\n        children: \"Add to cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, _this), showViewCart ? /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/cart\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-3 py-1\",\n          children: \"View Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 24\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, _this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 3\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(AddToCart, \"6Jq9jqPNdbpW85xpPCQnMgY7+ng=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = AddToCart;\nexport default AddToCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddToCart\");","map":{"version":3,"sources":["/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/src/components/cart/AddToCartButton.js"],"names":["useState","useContext","ApolloProvider","gql","useQuery","useMutation","AppContext","getFormattedCart","updateCart","addFirstProduct","Link","client","v4","GET_CART","ADD_TO_CART","AddToCart","props","product","productQryInput","clientMutationId","productId","cart","setCart","showViewCart","setShowViewCart","requestError","setRequestError","handleAddToCartLocalStorage","existingCart","localStorage","getItem","JSON","parse","qtyToBeAdded","updatedCart","newCart","notifyOnNetworkStatusChange","onCompleted","data","setItem","stringify","loading","error","refetch","variables","input","addToCartError","graphQLErrors","message","onError","addToCart","addToCartRes","addToCartLoading","handleAddToCartClick","__typename","externalUrl"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport {ApolloProvider, gql , useQuery, useMutation } from '@apollo/client';\nimport { AppContext } from \"../context/AppContext\";\nimport { getFormattedCart , updateCart , addFirstProduct  } from \"../../functions\";\nimport Link from \"next/link\";\nimport client from \"../../../components/Apolloclient\";\n//import gql from \"graphql-tag\";\nimport { v4 } from 'uuid';\nimport GET_CART from \"../../queries/get-cart\";\nimport ADD_TO_CART from \"../../mutations/add-to-cart\";\n\n\nconst AddToCart = ( props ) => {\n\n\tconst { product } = props;\n\n\tconst productQryInput = {\n\t\tclientMutationId: v4(), // Generate a unique id.\n\t\tproductId: product.productId,\n\t};\n\n\tconst [ cart, setCart ] = useContext( AppContext );\n\tconst [ showViewCart, setShowViewCart ] = useState( false );\n\tconst [ requestError, setRequestError ] = useState( null );\n\n\t/**\n\t * @TODO will update this in future, when required.\n\t * Handles adding items to the cart.\n\t *\n\t * @return {void}\n\t */\n\tconst handleAddToCartLocalStorage = () => {\n\t\n\t\t// If component is rendered client side.\n\t\tif ( process.browser ) {\n\t\n\t\t\tlet existingCart = localStorage.getItem( 'woo-next-cart' );\n\t\n\n\t\t\t// If cart has item(s) already, update existing or add new item.\n\t\t\tif ( ! existingCart ) {\n\t\n\t\t\t\texistingCart = JSON.parse( existingCart );\n\t\n\t\t\t\tconst qtyToBeAdded = 1;\n\t\n\t\t\t\tconst updatedCart = updateCart( existingCart, product, qtyToBeAdded );\n\t\n\t\t\t\tsetCart( updatedCart );\n\t\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * If No Items in the cart, create an empty array and add one.\n\t\t\t\t * @type {Array}\n\t\t\t\t */\n\t\t\t\tconst newCart = addFirstProduct( product );\n\t\t\t\tsetCart( newCart );\n\t\t\t}\n\t\n\t\t\t// Show View Cart Button\n\t\t\tsetShowViewCart( true )\n\t\t}\n\t};\n\n\t// Get Cart Data.\n\n\t\n\tconst { loading, error, data, refetch } = useQuery( GET_CART, {\n\t\tnotifyOnNetworkStatusChange: true,\n\t\tonCompleted: () => {\n\t\t\t\n\t\t\t//console.warn( 'completed GET_CART' );\t\t\n\t\t\t// Update cart in the localStorage.\n\t\t\tconst updatedCart = getFormattedCart( data );\n\t\t\tlocalStorage.setItem( 'woo-next-cart', JSON.stringify( updatedCart ) );\n\t\t\t\n\t\t\t// Update cart data in React Context.\n\t\t\tsetCart( updatedCart );\n\t\t}\n\t} );\n\n\t// Add to Cart Mutation.\n\tconst [ addToCart, { data: addToCartRes, loading: addToCartLoading, error: addToCartError }] = useMutation( ADD_TO_CART, {\n\t\tvariables: {\n\t\t\tinput: productQryInput,\n\t\t},\n\t\n\t\tonCompleted: () => {\n\t\t\t// console.warn( 'completed ADD_TO_CART' );\n\n\t\t    // If error.\n\t\t\tif ( addToCartError ) {\n\t\t\t\tsetRequestError( addToCartError.graphQLErrors[0].message );\n\t\t\t}\n\n\t\t\t// On Success:\n\t\t\t// 1. Make the GET_CART query to update the cart with new values in React context.\n\t\t\trefetch();\n\n\t\t\t// 2. Show View Cart Button\n\t\t\tsetShowViewCart( true )\n\t\t\t\n\t\t},\n\t\tonError: ( error ) => {\n\t\t\tif ( error ) {\n\t\t\t\tsetRequestError( error.graphQLErrors[ 0 ].message );\n\t\t\t}\n\t\t}\n\t} );\n\n\tconst handleAddToCartClick = () => {\n\t    //handleAddToCartLocalStorage();\n\t\tsetRequestError( null );\n\t\taddToCart();\n\t};\n\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t<div>\n\t\t\t{/* Add To Cart Loading*/}\n\t\t\t{addToCartLoading && <p>Adding to Cart...</p>}\n\n\t\t\t{/*\tCheck if its an external product then put its external buy link */}\n\t\t\t{ \"ExternalProduct\" === product.__typename ? (\n\t\t\t\t\t<a href={ product.externalUrl } target=\"_blank\" className=\"px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\">Buy now</a>\n\t\t\t\t) :\n\t\t\t\t<button onClick={ handleAddToCartClick } className=\"px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current hover:bg-purple-600 hover:text-white hover:border-purple-600\">Add to cart</button>\n\t\t\t}\n\t\t\t{ showViewCart ? (\n\t\t\t\t<Link href=\"/cart\"><button className=\"px-3 py-1\">View Cart</button></Link>\n\t\t\t) : '' }\n\t\t</div>\n\t\t</ApolloProvider>\n\t);\n};\n\nexport default AddToCart;\n"]},"metadata":{},"sourceType":"module"}