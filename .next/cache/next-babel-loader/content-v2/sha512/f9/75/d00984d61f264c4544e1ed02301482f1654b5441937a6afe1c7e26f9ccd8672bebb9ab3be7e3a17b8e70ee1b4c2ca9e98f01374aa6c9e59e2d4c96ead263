{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/src/components/context/AppContext.js\";\nimport React, { useState, useEffect } from 'react';\nexport const AppContext = /*#__PURE__*/React.createContext([{}, () => {}]);\nexport const AppProvider = props => {\n  const {\n    0: cart,\n    1: setCart\n  } = useState(null);\n  useEffect(() => {\n    // @TODO Will add option to show the cart with localStorage later.\n    if (false) {\n      let cartData = localStorage.getItem('woo-next-cart');\n      cartData = null !== cartData ? JSON.parse(cartData) : '';\n      setCart(cartData);\n      console.warn('completed context Run');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: [cart, setCart],\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/src/components/context/AppContext.js"],"names":["React","useState","useEffect","AppContext","createContext","AppProvider","props","cart","setCart","cartData","localStorage","getItem","JSON","parse","console","warn","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,MAAMC,UAAU,gBAAGH,KAAK,CAACI,aAAN,CAAoB,CAC7C,EAD6C,EAE7C,MAAM,CAAE,CAFqC,CAApB,CAAnB;AAKP,OAAO,MAAMC,WAAW,GAAKC,KAAF,IAAa;AAEvC,QAAM;AAAA,OAAEC,IAAF;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAE,IAAF,CAAlC;AAEAC,EAAAA,SAAS,CAAE,MAAM;AAEhB;AACA,eAAuB;AAEtB,UAAIO,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAsB,eAAtB,CAAf;AACAF,MAAAA,QAAQ,GAAG,SAASA,QAAT,GAAoBG,IAAI,CAACC,KAAL,CAAYJ,QAAZ,CAApB,GAA6C,EAAxD;AACAD,MAAAA,OAAO,CAAEC,QAAF,CAAP;AAECK,MAAAA,OAAO,CAACC,IAAR,CAAc,uBAAd;AAED;AAED,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACC,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAG,CAAER,IAAF,EAAQC,OAAR,CAA7B;AAAA,cACGF,KAAK,CAACU;AADT;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAxBM","sourcesContent":["import React, { useState, useEffect } from 'react';\nexport const AppContext = React.createContext([\n\t{},\n\t() => {}\n]);\n\nexport const AppProvider = ( props ) => {\n\n\tconst [ cart, setCart ] = useState( null );\n\n\tuseEffect( () => {\n\n\t\t// @TODO Will add option to show the cart with localStorage later.\n\t\tif ( process.browser ) {\n\n\t\t\tlet cartData = localStorage.getItem( 'woo-next-cart' );\n\t\t\tcartData = null !== cartData ? JSON.parse( cartData ) : '';\n\t\t\tsetCart( cartData );\n\n\t\t \tconsole.warn( 'completed context Run' );\n\n\t\t}\n\n\t}, [] );\n\n\treturn (\n\t\t<AppContext.Provider value={ [ cart, setCart ] }>\n\t\t\t{ props.children }\n\t\t</AppContext.Provider>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}