{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/pages/product/relatedproduct.js\";\nimport { useState } from \"react\";\nimport RELATED_PRODUCT_QUERY from \"../../query/relatedproduct\";\nimport { useQuery } from '@apollo/client';\nimport { MDBContainer } from 'mdb-react-ui-kit';\nimport Product from \"../../components/products\";\n\nconst Related = () => {\n  const {\n    0: maxprice,\n    1: setmMaxprice\n  } = useState(1000);\n\n  const handleChange = event => {\n    let val, Intval, floatVal;\n    val = event.target.value;\n    floatVal = parseFloat(val);\n    Intval = parseInt(floatVal);\n    fetchMore({\n      variables: {\n        fisrt: 100,\n        maxPrice: Intval\n      }\n    }).then(fetchMoreResult => {\n      setmMaxprice(Intval);\n    });\n  };\n\n  const {\n    data,\n    loading,\n    error,\n    fetchMore\n  } = useQuery(RELATED_PRODUCT_QUERY);\n  if (loading) return '';\n  if (error) return true;\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n  const shoplist = data.products.nodes;\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    className: \"py-5 my-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row row-cols-1 row-cols-md-4 g-4\",\n      children: shoplist.map(items => /*#__PURE__*/_jsxDEV(Product, {\n        product: items\n      }, items.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this);\n};\n\nexport default Related;","map":{"version":3,"sources":["/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/pages/product/relatedproduct.js"],"names":["useState","RELATED_PRODUCT_QUERY","useQuery","MDBContainer","Product","Related","maxprice","setmMaxprice","handleChange","event","val","Intval","floatVal","target","value","parseFloat","parseInt","fetchMore","variables","fisrt","maxPrice","then","fetchMoreResult","data","loading","error","shoplist","products","nodes","map","items","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,OAAP,MAAoB,2BAApB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAElB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA2BP,QAAQ,CAAC,IAAD,CAAzC;;AAEA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAE5B,QAAIC,GAAJ,EAASC,MAAT,EAAiBC,QAAjB;AACAF,IAAAA,GAAG,GAAGD,KAAK,CAACI,MAAN,CAAaC,KAAnB;AACAF,IAAAA,QAAQ,GAAGG,UAAU,CAACL,GAAD,CAArB;AACAC,IAAAA,MAAM,GAAGK,QAAQ,CAACJ,QAAD,CAAjB;AAEAK,IAAAA,SAAS,CAAC;AAENC,MAAAA,SAAS,EAAE;AACPC,QAAAA,KAAK,EAAE,GADA;AAEPC,QAAAA,QAAQ,EAAET;AAFH;AAFL,KAAD,CAAT,CAMGU,IANH,CAMQC,eAAe,IAAI;AAEvBf,MAAAA,YAAY,CAACI,MAAD,CAAZ;AAEH,KAVD;AAWH,GAlBD;;AAmBA,QAAM;AAAEY,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,KAAjB;AAAwBR,IAAAA;AAAxB,MAAsCf,QAAQ,CAACD,qBAAD,CAApD;AACA,MAAIuB,OAAJ,EAAa,OAAO,EAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,IAAP;AACX,MAAI,CAACF,IAAL,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,QAAMG,QAAQ,GAAGH,IAAI,CAACI,QAAL,CAAcC,KAA/B;AAEA,sBACQ,QAAC,YAAD;AAAc,IAAA,SAAS,EAAC,WAAxB;AAAA,2BAGI;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA,gBAEQF,QAAQ,CAACG,GAAT,CAAcC,KAAD,iBACT,QAAC,OAAD;AAAwB,QAAA,OAAO,EAAEA;AAAjC,SAAcA,KAAK,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADR;AAeH,CA7CD;;AA+CA,eAAe1B,OAAf","sourcesContent":["import { useState } from \"react\";\nimport RELATED_PRODUCT_QUERY from \"../../query/relatedproduct\";\nimport { useQuery } from '@apollo/client';\nimport { MDBContainer } from 'mdb-react-ui-kit';\nimport Product from \"../../components/products\";\n\nconst Related = () => {\n\n    const [maxprice, setmMaxprice] = useState(1000);\n\n    const handleChange = (event) => {\n\n        let val, Intval, floatVal;\n        val = event.target.value;\n        floatVal = parseFloat(val);\n        Intval = parseInt(floatVal);\n\n        fetchMore({\n\n            variables: {\n                fisrt: 100,\n                maxPrice: Intval,\n            }\n        }).then(fetchMoreResult => {\n\n            setmMaxprice(Intval);\n\n        });\n    }\n    const { data, loading, error, fetchMore } = useQuery(RELATED_PRODUCT_QUERY);\n    if (loading) return '';\n    if (error) return true;\n    if (!data) return <p>Not found</p>;\n\n    const shoplist = data.products.nodes;\n\n    return (\n            <MDBContainer className=\"py-5 my-5\">\n\n\n                <div className=\"row row-cols-1 row-cols-md-4 g-4\">\n                    {\n                        shoplist.map((items) =>\n                            <Product key={items.id} product={items} />\n                        )\n                    }\n                </div>\n            </MDBContainer>\n       \n    )\n\n}\n\nexport default Related;"]},"metadata":{},"sourceType":"module"}