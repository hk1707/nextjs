{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/components/Productpage.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Layout from \"./Layout\";\nimport PRODUCT_QUERY_NEW from \"../query/productquery\";\nimport { useQuery } from '@apollo/client';\nimport client from \"./Apolloclient\";\n\nvar ProductPage = function ProductPage() {\n  _s();\n\n  var _useQuery = useQuery(PRODUCT_QUERY_NEW),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return \"\";\n  if (error) return true;\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 21\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"ggsdfsfs\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 11\n  }, _this);\n};\n\n_s(ProductPage, \"yNnsXjA/pjAqeMrDII9OecDKaHU=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductPage;\nexport default ProductPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductPage\");","map":{"version":3,"sources":["/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/components/Productpage.js"],"names":["Layout","PRODUCT_QUERY_NEW","useQuery","client","ProductPage","data","loading","error"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,iBAAP,MAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AAAA,kBAEWF,QAAQ,CAAED,iBAAF,CAFnB;AAAA,MAEhBI,IAFgB,aAEhBA,IAFgB;AAAA,MAETC,OAFS,aAETA,OAFS;AAAA,MAECC,KAFD,aAECA,KAFD;;AAIxB,MAAID,OAAJ,EAAa,OAAO,EAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,IAAP;AACX,MAAI,CAACF,IAAL,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAEX,sBAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHR;AAQD,CAhBD;;GAAMD,W;UAE+BF,Q;;;KAF/BE,W;AAkBN,eAAeA,WAAf","sourcesContent":["import Layout from \"./Layout\";\nimport PRODUCT_QUERY_NEW from \"../query/productquery\";\nimport { useQuery } from '@apollo/client';\nimport client from \"./Apolloclient\";\n\nconst ProductPage = () => {\n\n  const { data , loading , error } = useQuery( PRODUCT_QUERY_NEW );\n\n  if (loading) return \"\";\n  if (error) return true;\n  if (!data) return <p>Not found</p>;\n\n  return (\n      \n    \n          <h1>ggsdfsfs</h1>\n    \n    \n  )\n\n}\n\nexport default ProductPage;"]},"metadata":{},"sourceType":"module"}