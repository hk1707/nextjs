{"ast":null,"code":"import _taggedTemplateLiteral from \"/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query  \\n    Posts($first:Int , $after:String) {\\n    __typename\\n    posts(first: $first, after: $after) {\\n      nodes {\\n        authorId\\n        id\\n        postId\\n        slug\\n        title\\n        content\\n        featuredImage {\\n          node {\\n            altText\\n            sourceUrl\\n            srcSet\\n            uri\\n          }\\n        }\\n        featuredImageId\\n        status\\n      }\\n      pageInfo {\\n        endCursor\\n        hasNextPage\\n      }\\n    }\\n  }\\n  \\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"query{\\n    posts(first: 10) {\\n        nodes {\\n          authorId\\n          id\\n          postId\\n          slug\\n          title\\n          content\\n          featuredImage {\\n            node {\\n              altText\\n              sourceUrl\\n              srcSet\\n              uri\\n            }\\n          }\\n          featuredImageId\\n          status\\n          }\\n        }\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from \"@apollo/client\";\nexport var POST_QUERY_ALL = gql(_templateObject());\nvar POST_QUERY = gql(_templateObject2());\nexport default POST_QUERY;","map":{"version":3,"sources":["/opt/lampp/htdocs/wordpress/wp-content/themes/react-next/query/postQuety.js"],"names":["gql","POST_QUERY_ALL","POST_QUERY"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,SAAQA,GAAR,QAAkB,gBAAlB;AAEA,OAAO,IAAMC,cAAc,GAAED,GAAF,mBAApB;AA0BP,IAAME,UAAU,GAAEF,GAAF,oBAAhB;AA+BA,eAAeE,UAAf","sourcesContent":["import {gql} from \"@apollo/client\";\n\nexport const POST_QUERY_ALL =gql`query{\n    posts(first: 10) {\n        nodes {\n          authorId\n          id\n          postId\n          slug\n          title\n          content\n          featuredImage {\n            node {\n              altText\n              sourceUrl\n              srcSet\n              uri\n            }\n          }\n          featuredImageId\n          status\n          }\n        }\n}`;\n \n\n\n\nconst POST_QUERY =gql`\n  query  \n    Posts($first:Int , $after:String) {\n    __typename\n    posts(first: $first, after: $after) {\n      nodes {\n        authorId\n        id\n        postId\n        slug\n        title\n        content\n        featuredImage {\n          node {\n            altText\n            sourceUrl\n            srcSet\n            uri\n          }\n        }\n        featuredImageId\n        status\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n  \n`;\nexport default POST_QUERY;"]},"metadata":{},"sourceType":"module"}