{"ast":null,"code":"var _jsxFileName = \"/Users/jenncreighton/Apollo/apollo-client-devtools/development/client/src/ColorLookup.js\";\nimport React, { useState } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { GET_COLOR } from './queries';\nimport Color from './components/Color';\n\nconst ColorLookup = () => {\n  const [hexCode, setHexCode] = useState('');\n  const [getColor, {\n    data\n  }] = useLazyQuery(GET_COLOR);\n  const color = data === null || data === void 0 ? void 0 : data.color;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lookup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      getColor({\n        variables: {\n          hex: hexCode\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Look up color details by hex code\",\n    value: hexCode,\n    onChange: e => setHexCode(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Lookup\")), color && /*#__PURE__*/React.createElement(Color, {\n    contrast: color.contrast,\n    hexCode: color.hex,\n    name: color.name,\n    isSaved: color.saved,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default ColorLookup;","map":{"version":3,"sources":["/Users/jenncreighton/Apollo/apollo-client-devtools/development/client/src/ColorLookup.js"],"names":["React","useState","useLazyQuery","GET_COLOR","Color","ColorLookup","hexCode","setHexCode","getColor","data","color","e","preventDefault","variables","hex","target","value","contrast","name","saved"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,QAAD,EAAW;AAAEC,IAAAA;AAAF,GAAX,IAAuBP,YAAY,CAACC,SAAD,CAAzC;AACA,QAAMO,KAAK,GAAGD,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEC,KAApB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAGC,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAACC,cAAF;AACAJ,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,SAAS,EAAE;AAAEC,UAAAA,GAAG,EAAER;AAAP;AAAb,OAAD,CAAR;AACD,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,mCAFd;AAGE,IAAA,KAAK,EAAEA,OAHT;AAIE,IAAA,QAAQ,EAAGK,CAAD,IAAOJ,UAAU,CAACI,CAAC,CAACI,MAAF,CAASC,KAAV,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAUE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,CADF,EAaGN,KAAK,iBAAI,oBAAC,KAAD;AACR,IAAA,QAAQ,EAAEA,KAAK,CAACO,QADR;AAER,IAAA,OAAO,EAAEP,KAAK,CAACI,GAFP;AAGR,IAAA,IAAI,EAAEJ,KAAK,CAACQ,IAHJ;AAIR,IAAA,OAAO,EAAER,KAAK,CAACS,KAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbZ,CADF;AAsBD,CA3BD;;AA6BA,eAAed,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { GET_COLOR } from './queries';\nimport Color from './components/Color';\n\nconst ColorLookup = () => {\n  const [hexCode, setHexCode] = useState('');\n  const [getColor, { data }] = useLazyQuery(GET_COLOR);\n  const color = data?.color;\n\n  return (\n    <div className=\"lookup\">\n      <form onSubmit={(e) => {\n        e.preventDefault();\n        getColor({ variables: { hex: hexCode } });\n      }}>\n        <input \n          type=\"text\" \n          placeholder=\"Look up color details by hex code\" \n          value={hexCode}\n          onChange={(e) => setHexCode(e.target.value)}\n        />\n        <button type=\"submit\">Lookup</button>\n      </form>\n      {color && <Color\n        contrast={color.contrast}\n        hexCode={color.hex} \n        name={color.name}\n        isSaved={color.saved}\n      />}\n    </div>\n  );\n};\n\nexport default ColorLookup;"]},"metadata":{},"sourceType":"module"}